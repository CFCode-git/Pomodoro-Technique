{"version":3,"sources":["redux/reducers/index.ts","redux/reducers/todos.ts","redux/actionTypes.ts","redux/reducers/tomatoes.ts","redux/store.ts","config/history.ts","config/axios.ts","components/Tomatoes/CountDown.tsx","components/Statistics/Statistics.tsx","components/Login/Login.tsx","components/SignUp/SignUp.tsx","redux/actions/todos.ts","redux/actions/tomatoes.ts","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Statistics/Polygon.tsx","components/Statistics/TodoHistory/TodoHistoryTodoItem.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/TomatoHistory/TomatoHistoryItem.tsx","components/Statistics/TomatoHistory/TomatoHistory.tsx","components/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["combineReducers","todos","state","action","type","payload","map","t","id","Object","assign","editing","tomatoes","store","createStore","rootReducer","publicUrl","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","push","timerId","View","SignUp","props","onChange","key","value","setState","newState","submit","a","account","password","post","log","Error","this","className","placeholder","prefix","UserOutlined","e","target","Password","shape","onClick","to","React","Component","passwordConformation","password_confirmation","updateTodo","updateTomato","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","style","width","minute","Math","floor","second","confirm","TomatoAction","onKeyUp","keyCode","description","ended_at","Date","forceUpdate","showConfirm","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","abortTomato","onCancel","abortedReason","window","prompt","aborted","params","put","unfinishedTomato","data","resource","html","undefined","startTomato","startAt","parse","started_at","timeNow","getTime","CloseCircleOutlined","TomatoItem","dayjs","format","TomatoList","list","dates","d","finishedTomatoes","length","keys","sort","b","splice","Tomatoes","addTomato","finishTomatoes","filter","_","groupBy","tomato","mapDispatchToProps","connect","ownProps","TodoInput","postTodo","addTodo","suffix","EnterOutlined","TodoItem","inputRef","createRef","completed","completed_at","editTodo","editText","oldText","current","focus","Editing","ref","DeleteOutlined","deleted","Text","EditOutlined","stopPropagation","todoItemClass","classNames","checked","Panel","Todos","unCompletedTodos","bordered","header","completedTodos","isSame","unDeletedTodos","Polygon","point","polygonWidth","firstDay","finalY","range","finishedCount","pointArray","date","x","y","totalFinishedCount","join","height","fill","stroke","strokeWidth","points","TodoHistoryTodoItem","todo","formatText","itemType","updated_at","finished","created_at","TabPane","TodoHistory","finishedTodoList","finishedDates","weekday","dailyFinishedTodos","deletedTodoList","deletedTodos","defaultActiveKey","tab","finishedTodos","TomatoHistoryItem","editTomato","onDoubleClick","TomatoHistory","finishedTomatoList","dailyFinishedTomatoes","toFixed","abortedTomatoesList","abortedTomatoes","Statistics","polygonRef","handleResize","clientWidth","view","selected","addEventListener","bind","removeEventListener","dailyTomatoes","dailyTodos","menu","Item","PoweroffOutlined","Home","getTodos","get","resources","initTodos","getTomatoes","initTomatoes","getMe","user","overlay","DownOutlined","marginLeft","mapDisPatchToProps","App","exact","path","component","Login","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f911be9b.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\nexport default combineReducers({todos,tomatoes});","import {ADD_TODO, INIT_TODOS, EDIT_TODO, UPDATE_TODO} from '../actionTypes';\r\n\r\nexport default (state: any[] = [], action: any): any => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.payload];\r\n    case INIT_TODOS:\r\n      return [...action.payload];\r\n    case UPDATE_TODO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return t;\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload) {\r\n          return Object.assign({}, t, {editing: true});\r\n        } else {\r\n          return Object.assign({}, t, {editing: false});\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const ADD_TOMATO = 'ADD_TOMATO';\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES';\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO';\r\nexport const EDIT_TOMATO = 'EDIT_TOMATO';\r\n","import {EDIT_TOMATO,ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport default (state: any[] = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state];\r\n    case INIT_TOMATOES:\r\n      return [...action.payload];\r\n    case EDIT_TOMATO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload) {\r\n          return Object.assign({}, t, {editing: true});\r\n        } else {\r\n          return Object.assign({}, t, {editing: false});\r\n        }\r\n      });\r\n    case UPDATE_TOMATO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return t;\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store","import {createBrowserHistory} from 'history';\n\nconst ENV = process.env.NODE_ENV;\nlet publicUrl: string = '';\nif (ENV === 'development') {\n  publicUrl = '/';\n} else if (ENV === 'production') {\n  publicUrl = '/Pomodoro-Technique';\n}\nconst history = createBrowserHistory(\n  { basename: publicUrl }\n);\n\nexport default history;","import axios from 'axios';\r\nimport history from './history';\r\n\r\nconst appID = 'gxd4HcnaxxFM64hcN4nJmawQ';\r\nconst appSecret = 'uYmMu1oVickC7zdox6L7TLJ3';\r\n\r\n/* tslint:disable:no-string-literal */\r\nconst instance = axios.create({\r\n  baseURL: 'https://gp-server.hunger-valley.com/',\r\n  // timeout:1000,\r\n  headers: {\r\n    't-app-id': appID,\r\n    't-app-secret': appSecret\r\n  }\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use((config) => {\r\n  const xToken = localStorage.getItem('x-token');\r\n  if (xToken) {\r\n    // 认证信息\r\n    config.headers['Authorization'] = `Bearer ${xToken}`;\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  console.error(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use((response) => {\r\n  // Do something with response data\r\n  if (response.headers['x-token']) {\r\n    localStorage.setItem('x-token', response.headers['x-token']);\r\n  }\r\n  return response;\r\n}, (error) => {\r\n  if (error.response.status === 401) {\r\n    history.push('/login')\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\n/* tslint:disable:no-string-literal */\r\nexport default instance;","import React from 'react';\r\nimport './CountDown.scss';\r\n\r\ninterface ICountDownProps {\r\n  timer: number\r\n  duration: number\r\n  onFinish: () => void\r\n}\r\n\r\ninterface ICountDownState {\r\n  countDown: number\r\n}\r\n\r\nlet timerId: NodeJS.Timeout;\r\n\r\nclass CountDown extends React.Component<ICountDownProps, ICountDownState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      countDown: this.props.timer\r\n    };\r\n  }\r\n\r\n  get countDown() {\r\n    const minute = Math.floor(this.state.countDown / 1000 / 60);\r\n    const second = Math.floor(this.state.countDown / 1000 % 60);\r\n    return (`${minute < 10 ? `0${minute}` : minute}:${second < 10 ? `0${second}` : second}`);\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    timerId = setInterval(() => {\r\n      let time = this.state.countDown;\r\n      this.setState((state) => ({countDown: state.countDown - 1000}));\r\n      document.title = `${this.countDown} - Pomodoro番茄工作法`;\r\n       if (time < 1000) {\r\n        this.props.onFinish();\r\n        document.title = \"Pomodoro番茄工作法\";\r\n        clearInterval(timerId);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    clearInterval(timerId);\r\n  }\r\n\r\n  render() {\r\n    const percent = 1 - this.state.countDown / this.props.duration;\r\n    return (\r\n      <div className=\"CountDown\" id=\"CountDown\">\r\n        <span className=\"restTime\">{this.countDown}</span>\r\n        <div className=\"progress\" style={{width: `${percent * 100}%`}}/>\r\n      </div>\r\n    );\r\n  };\r\n};\r\nexport default CountDown;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './Statistics.scss';\r\nimport dayjs from 'dayjs';\r\nimport _ from 'lodash';\r\nimport Polygon from './Polygon';\r\nimport TodoHistory from './TodoHistory/TodoHistory';\r\nimport TomatoHistory from './TomatoHistory/TomatoHistory';\r\n\r\nenum View {\r\n  Todos = 'Todos',\r\n  Tomatoes = 'Tomatoes',\r\n  Statistics = 'Statistics'\r\n}\r\n\r\ninterface IStatisticsProps {\r\n  todos: any[]\r\n  tomatoes: any[]\r\n}\r\n\r\ninterface IStatisticsState {\r\n  view: string\r\n  polygonWidth: null | number\r\n  selected: string\r\n}\r\n\r\nclass Statistics extends React.Component<IStatisticsProps, IStatisticsState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      view: View.Tomatoes,\r\n      polygonWidth: null,\r\n      selected: 'TomatoesHistory'\r\n    };\r\n  }\r\n\r\n  private polygonRef = React.createRef<HTMLDivElement>();\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted);\r\n  }\r\n\r\n  get dailyTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => {\r\n      return dayjs(todo.updated_at).format('YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    return this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n  }\r\n\r\n  get dailyTomatoes() {\r\n    return _.groupBy(this.finishedTomatoes, (todo) => {\r\n      return dayjs(todo.updated_at).format('YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleResize();\r\n    window.addEventListener('resize', this.handleResize.bind(this)); //监听窗口大小改变\r\n  }\r\n\r\n  componentWillUnmount() { //一定要最后移除监听器，以防多个组件之间导致this的指向紊乱\r\n    window.removeEventListener('resize', this.handleResize.bind(this));\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.setState({\r\n      polygonWidth: this.polygonRef.current && this.polygonRef.current.clientWidth\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let view;\r\n    if (this.state.view === View.Todos) {\r\n      view = <TodoHistory/>;\r\n    } else if (this.state.view === View.Tomatoes) {\r\n      view = <TomatoHistory/>;\r\n    } else if (this.state.view === View.Statistics) {\r\n      view = <p>statistics</p>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"Statistics\" id=\"Statistics\">\r\n        <ul className=\"group\">\r\n          <li className={this.state.selected === 'TomatoesHistory' ? 'active' : ''}\r\n              onClick={() => this.setState({view: View.Tomatoes, selected: 'TomatoesHistory'})}>\r\n            <div className=\"description\">\r\n              <span className=\"title\">番茄历史</span>\r\n              <span className=\"subtitle\">累计完成番茄</span>\r\n              <span className=\"finishNumber\">{this.finishedTomatoes.length}</span>\r\n            </div>\r\n            <div className=\"polygon\" ref={this.polygonRef}>\r\n              <Polygon data={this.dailyTomatoes}\r\n                       totalFinishedCount={this.finishedTomatoes.length}\r\n                       polygonWidth={this.state.polygonWidth}/>\r\n            </div>\r\n          </li>\r\n          <li className={this.state.selected === 'TodosHistory' ? 'active' : ''}\r\n            onClick={() => this.setState({view: View.Todos,selected:'TodosHistory'})}>\r\n            <div className=\"description\">\r\n              <span className=\"title\">任务历史</span>\r\n              <span className=\"subtitle\">累计完成任务</span>\r\n              <span className=\"finishNumber\">{this.finishedTodos.length}</span>\r\n            </div>\r\n            <div className=\"polygon\">\r\n              <Polygon data={this.dailyTodos}\r\n                       totalFinishedCount={this.finishedTodos.length}\r\n                       polygonWidth={this.state.polygonWidth}/>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        {view}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n\r\n","import React from 'react';\r\nimport {Input, Button} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './Login.scss';\r\n\r\n\r\ninterface ILoginState {\r\n  account: string,\r\n  password: string,\r\n}\r\n\r\n\r\nclass SignUp extends React.Component<any, ILoginState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n\r\n  onChange = (key: keyof ILoginState, value: string) => {\r\n    this.setState(() => {\r\n      const newState = {};\r\n      newState[key] = value;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n\r\n  submit = async () => {\r\n    const {account, password} = this.state;\r\n    try {\r\n      await axios.post('sign_in/user', {\r\n        account,\r\n        password\r\n      });\r\n      console.log('成功');\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n\r\n  public render() {\r\n    const {account, password} = this.state;\r\n    return (\r\n      <div className=\"Login\" id=\"Login\">\r\n        <h1>欢迎使用番茄闹钟</h1>\r\n        <Input\r\n          placeholder=\"请输入你的用户名\"\r\n          prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n          value={account}\r\n          onChange={e => this.onChange('account', e.target.value)}\r\n        />\r\n        <Input.Password value={password} placeholder=\"请输入密码\" onChange={e => this.onChange('password', e.target.value)}/>\r\n        <div className=\"buttonWrapper\">\r\n          <Button type=\"primary\" shape=\"round\" className=\"loginButton\" onClick={this.submit}>登录</Button>\r\n          <p>还没有账号吗？\r\n            <Link to=\"/signup\"> 注册 </Link> 一下吧~\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport {Input, Button} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './SignUp.scss';\r\n\r\n\r\ninterface ISignUpState {\r\n  account: string,\r\n  password: string,\r\n  passwordConformation: string\r\n}\r\n\r\n\r\nclass SignUp extends React.Component<any, ISignUpState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n      passwordConformation: ''\r\n    };\r\n  }\r\n\r\n\r\n  onChange = (key: keyof ISignUpState, value: string) => {\r\n    this.setState(() => {\r\n      const newState = {};\r\n      newState[key] = value;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n\r\n  submit = async () => {\r\n    const {account, password, passwordConformation} = this.state;\r\n    try {\r\n      await axios.post('sign_up/user', {\r\n        account: account,\r\n        password: password,\r\n        password_confirmation: passwordConformation\r\n      });\r\n      console.log('成功');\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n\r\n  public render() {\r\n    const {account, password, passwordConformation} = this.state;\r\n    return (\r\n      <div className=\"SignUp\" id=\"SignUp\">\r\n        <h1>注册</h1>\r\n        <Input\r\n          placeholder=\"请输入你的用户名\"\r\n          prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n          value={account}\r\n          onChange={e=>this.onChange('account',e.target.value)}\r\n        />\r\n        <Input.Password value={password} placeholder=\"请输入密码\" onChange={e=>this.onChange('password',e.target.value)}/>\r\n        <Input.Password value={passwordConformation} placeholder=\"请确认密码\" onChange={e=>this.onChange('passwordConformation',e.target.value)}/>\r\n        <div className=\"buttonWrapper\">\r\n          <Button type=\"primary\" shape=\"round\" className=\"signUpButton\" onClick={this.submit}>注册</Button>\r\n          <p>如果你有账号，可以立即\r\n            <Link to=\"/login\"> 登录 </Link> 哦\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import {EDIT_TODO, UPDATE_TODO, ADD_TODO, INIT_TODOS} from '../actionTypes';\n\nexport const addTodo = (payload: any) => {\n  return {\n    type: ADD_TODO,\n    payload,\n  };\n};\nexport const initTodos = (payload: any[]) => {\n  return {\n    type: INIT_TODOS,\n    payload\n  };\n};\nexport const updateTodo = (payload: any) => {\n  return {\n    type: UPDATE_TODO,\n    payload\n  };\n};\nexport const editTodo = (payload: number) => {\n  return {\n    type: EDIT_TODO,\n    payload\n  };\n};\n\n\n\n\n","import {EDIT_TOMATO, INIT_TOMATOES, ADD_TOMATO, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport const addTomato = (payload: any) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  };\r\n};\r\nexport const initTomatoes = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  };\r\n};\r\nexport const updateTomato = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  };\r\n};\r\nexport const editTomato = (payload: number) => {\r\n  return {\r\n    type: EDIT_TOMATO,\r\n    payload\r\n  };\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Button, Input,Modal} from 'antd';\r\nimport axios from '../../config/axios';\r\nimport CountDown from './CountDown';\r\n// import CountDownHook from './CountDownHook';\r\nimport {CloseCircleOutlined,ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport './TomatoAction.scss';\r\n\r\ninterface ITomatoActionProps {\r\n  startTomato: () => void;\r\n  unfinishedTomato: any;\r\n  updateTomato: (payload: any) => void;\r\n}\r\n\r\ninterface ITomatoActionState {\r\n  description: string;\r\n}\r\n\r\nconst confirm = Modal.confirm\r\n\r\nclass TomatoAction extends Component <ITomatoActionProps, ITomatoActionState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.updateTomato({\r\n        description: this.state.description,\r\n        ended_at: new Date()\r\n      });\r\n      this.setState({description: ''});\r\n    }\r\n  };\r\n\r\n  onFinish = () => {\r\n    this.forceUpdate(); // 强制更新\r\n  };\r\n\r\n  showConfirm=()=> {\r\n    confirm({\r\n      title: '您目前正在一个番茄工作时间中,要放弃这个番茄吗?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: '坚持就是胜利哦~~',\r\n      okText:'我不行了',\r\n      cancelText:'继续坚持',\r\n      onOk:()=> {\r\n        this.abortTomato()\r\n      },\r\n      onCancel:()=> {\r\n        console.log('加油呀!');\r\n      },\r\n    });\r\n  }\r\n\r\n  abortTomato =  () => {\r\n    const abortedReason = window.prompt('请输入打断原因:') || '番茄被打断'\r\n    this.updateTomato({aborted: true,description:abortedReason});\r\n    document.title = \"Pomodoro番茄工作法\";\r\n  };\r\n\r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`, params);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    let html = <div/>;\r\n    if (this.props.unfinishedTomato === undefined) {\r\n      html = <Button className=\"startTomatoButton\" onClick={() => {this.props.startTomato();}}>开始番茄</Button>;\r\n    } else {\r\n      const startAt = Date.parse(this.props.unfinishedTomato.started_at);\r\n      const duration = this.props.unfinishedTomato.duration;\r\n      const timeNow = new Date().getTime();\r\n      if (timeNow - startAt > duration) {\r\n        html = <div className=\"inputWrapper\">\r\n          <Input className=\"inputTask\"\r\n                 value={this.state.description}\r\n                 placeholder=\"请输入你刚刚完成的任务\"\r\n                 onChange={e => this.setState({description: e.target.value})}\r\n                 onKeyUp={e => this.onKeyUp(e)}\r\n          />\r\n          <CloseCircleOutlined className=\"abort\"\r\n                               onClick={this.showConfirm}/>\r\n        </div>;\r\n      } else if (timeNow - startAt < duration) {\r\n        let timer = duration - timeNow + startAt;\r\n        html = (\r\n          <div className=\"countDownWrapper\">\r\n            <CountDown timer={timer} onFinish={this.onFinish} duration={duration}/>\r\n            <CloseCircleOutlined className=\"abort\"\r\n                                 onClick={this.showConfirm}/>\r\n          </div>\r\n        );// 倒计时\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"TomatoAction\" id=\"TomatoAction\">\r\n        {html}\r\n      </div>\r\n    );\r\n  };\r\n};\r\nexport default TomatoAction;","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport './TomotoList.scss';\r\n\r\ninterface ITomatoListProps {\r\n  finishedTomatoes: any\r\n}\r\n\r\nconst TomatoItem = function (props) {\r\n  return (\r\n    <div className=\"TomatoItem\">\r\n      <span className=\"timeRange\"> {dayjs(props.started_at).format('HH:mm')} - {dayjs(props.ended_at).format('HH:mm')} </span>\r\n      <span className=\"taskDescription\"> {props.description} </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TomatoList extends React.Component <ITomatoListProps> {\r\n  constructor(props) {super(props);}\r\n\r\n  get dates() {\r\n    // const thisday = dayjs(new Date()).date()\r\n    // const lastday = thisday - 2\r\n    const dates = Object.keys(this.props.finishedTomatoes);\r\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3);\r\n  }\r\n\r\n  public render() {\r\n    const list = this.dates.map(d => {\r\n      const tomatoes = this.props.finishedTomatoes[d];\r\n      return (\r\n        <div  key={d} className=\"dailyTomato\">\r\n          <div className=\"title\">\r\n            <span className=\"dateTime\"> {dayjs(d).format('M月DD日')} </span>\r\n            <span className=\"finishedCount\"> 完成了{tomatoes.length}个番茄 </span>\r\n          </div>\r\n          {\r\n            tomatoes.map(t => <TomatoItem key={t.id} {...t}/>)\r\n          }\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TomatoList\" id=\"TomatoList\">\r\n        {list}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoList;","import React, {Component} from 'react';\r\nimport './Tomatoes.scss';\r\nimport TomatoAction from './TomatoAction';\r\nimport {connect} from 'react-redux';\r\nimport {addTomato, updateTomato} from '../../redux/actions/tomatoes';\r\nimport TomatoList from './TomatoList';\r\nimport axios from '../../config/axios';\r\nimport _ from 'lodash';\r\n// import {format} from 'date-fns';\r\nimport dayjs from 'dayjs';\r\n\r\n\r\ninterface ITomatoesProps {\r\n  addTomato: (payload: any) => any\r\n  initTomatoes: (payload: any[]) => any\r\n  tomatoes: any[]\r\n  updateTomato: (payload: any) => any\r\n}\r\n\r\nclass Tomatoes extends Component <ITomatoesProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter(t => !t.description && !t.ended_at && !t.aborted)[0];\r\n  }\r\n\r\n  get finishTomatoes() {\r\n    const finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n    // console.log(format(new Date(),'yyyy-MM-d'))\r\n    // console.log(finishedTomatoes);\r\n    // finishedTomatoes.map(t=>{\r\n    //   console.log(format(new Date(t.started_at),'yyyy-MM-d'))\r\n    // })\r\n    // const obj = _.groupBy(finishedTomatoes, (tomato) => {\r\n    //   return format(new Date(tomato.started_at), 'yyyy-MM-d');\r\n    // });\r\n    return _.groupBy(finishedTomatoes, (tomato) => {\r\n      return dayjs(tomato.started_at).format('YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n\r\n  startTomato = async () => {\r\n    try {\r\n      const response = await axios.post('tomatoes', {duration: 25 * 60 * 1000});\r\n      this.props.addTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Tomatoes\" id=\"Tomatoes\">\r\n        <TomatoAction startTomato={this.startTomato} unfinishedTomato={this.unfinishedTomato}\r\n                      updateTomato={this.props.updateTomato}/>\r\n        <TomatoList finishedTomatoes={this.finishTomatoes}/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);","import  React from 'react';\r\nimport {Input} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {addTodo} from '../../redux/actions/todos';\r\nimport axios from '../../config/axios';\r\nimport {EnterOutlined} from '@ant-design/icons';\r\n\r\ninterface ITodoInputState {\r\n  description: string\r\n}\r\n\r\n\r\ninterface ITodoInputProps {\r\n  addTodo: (payload: any) => any\r\n}\r\n\r\nclass TodoInput extends React.Component<ITodoInputProps, ITodoInputState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.postTodo();\r\n    }\r\n  };\r\n\r\n  postTodo = async () => {\r\n    try {\r\n      const response = await axios.post('todos', {description: this.state.description});\r\n      this.props.addTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n    this.setState(({description: ''}));\r\n  };\r\n\r\n\r\n  public render() {\r\n    const {description} = this.state;\r\n    const suffix = description === '' ? <span/> : <EnterOutlined onClick={this.postTodo}/>;\r\n    return (\r\n      <div className=\"TodoInput\" id=\"TodoInput\">\r\n        <Input\r\n          placeholder=\"添加新任务\"\r\n          value={description}\r\n          suffix={suffix}\r\n          onChange={e => this.setState({'description': e.target.value})}\r\n          onKeyUp={this.onKeyUp}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Checkbox} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {editTodo, updateTodo} from '../../redux/actions/todos';\r\nimport classNames from 'classnames';\r\nimport './TodoItem.scss';\r\nimport {\r\n  EnterOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined\r\n} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\n\r\n\r\ninterface ITodoItemProps {\r\n  id: number;\r\n  description: string;\r\n  completed: boolean;\r\n  editing: boolean;\r\n  editTodo: (id: number) => any;\r\n  updateTodo: (payload: any) => any;\r\n  onEditRange: () => void\r\n}\r\n\r\ninterface ITodoItemState {\r\n  editText: string\r\n  oldText: string\r\n}\r\n\r\n// let timeId;\r\n\r\nclass TodoItem extends React.Component<ITodoItemProps, ITodoItemState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.description,\r\n      oldText: this.props.description\r\n    };\r\n  }\r\n\r\n  private inputRef = React.createRef<HTMLInputElement>();\r\n\r\n  componentDidUpdate() {\r\n    this.inputRef.current && this.inputRef.current.focus();\r\n    // this.onEditRange();\r\n  }\r\n\r\n  // onEditRange = () => {\r\n  //   let element = this.inputRef.current;\r\n  //   if (element) {\r\n  //     element.focus();\r\n  //     // let start = element.selectionStart;\r\n  //     // let end = element.selectionEnd;\r\n  //     // start && end && element.setSelectionRange(start, end);\r\n  //     // element.setSelectionRange(0, -1);\r\n  //     // console.log(this.inputRef.current);\r\n  //   }\r\n  // };\r\n\r\n  updateTodo = async (params: any) => {\r\n    if (params.completed) {\r\n      params.completed_at = new Date();\r\n    }\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  editTodo = () => {\r\n    // if(timeId){clearTimeout(timeId)};\r\n    this.props.editTodo(this.props.id);\r\n  };\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.keyCode === 13 && this.state.editText !== '') {\r\n      this.updateTodo({description: this.state.editText});\r\n    } else if (e.keyCode === 27) {\r\n      this.updateTodo({description: this.state.oldText});\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const Editing = (\r\n      <div className=\"editing\">\r\n        <input type=\"text\" value={this.state.editText}\r\n               onChange={e => this.setState({editText: e.target.value})}\r\n               onKeyUp={this.onKeyUp}\r\n               ref={this.inputRef}\r\n        />\r\n        <div className=\"iconWrapper\">\r\n          <EnterOutlined onClick={() => this.updateTodo({description: this.state.editText})}/>\r\n          <DeleteOutlined onClick={e => this.updateTodo({deleted: true})}/>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const Text = <span className=\"text\" onClick={() => this.updateTodo({completed: !this.props.completed})}>\r\n      {this.props.description}\r\n      <EditOutlined onClick={e => {\r\n        e.stopPropagation();\r\n        this.editTodo();\r\n      }}/>\r\n    </span>;\r\n    // const Text2 = <span onDoubleClick={this.toEditing}>\r\n    //                     onClick={()=>{\r\n    //                         if(timeId){clearTimeout(timeId)}\r\n    //                           timeId = setTimeout(() => {\r\n    //                             this.update({completed: !this.props.completed});\r\n    //                           }, 200);\r\n    //                     }}\r\n    //               {this.props.description}\r\n    //               </span> ;\r\n\r\n    // yarn add classnames\r\n    const todoItemClass = classNames({\r\n      TodoItem: true,\r\n      editing: this.props.editing,\r\n      completed: this.props.completed\r\n    });\r\n\r\n    return (\r\n      <div className={todoItemClass} id=\"TodoItem\">\r\n        <Checkbox checked={this.props.completed}\r\n                  onChange={e => this.updateTodo({completed: e.target.checked})}\r\n        />\r\n        {this.props.editing ? Editing : Text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  editTodo,\r\n  updateTodo,\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {updateTodo} from '../../redux/actions/todos';\r\nimport TodoInput from './TodoInput';\r\nimport TodoItem from './TodoItem';\r\nimport './Todos.scss';\r\nimport {Collapse} from 'antd';\r\nimport dayjs from 'dayjs';\r\n\r\nconst {Panel} = Collapse;\r\n\r\nclass Todos extends React.Component<any> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  get unDeletedTodos() {\r\n    return this.props.todos.filter(t => !t.deleted);\r\n  }\r\n\r\n  get unCompletedTodos() {\r\n    return this.unDeletedTodos.filter(t => !t.completed);\r\n  }\r\n\r\n  get completedTodos() {\r\n    return this.unDeletedTodos.filter(t => t.completed);\r\n  }\r\n\r\n  componentDidMount()  {\r\n\r\n  }\r\n  public render() {\r\n    return (\r\n      <div className=\"Todos\" id=\"Todos\">\r\n        <TodoInput/>\r\n        <div className=\"todoList\">\r\n          {\r\n            this.unCompletedTodos.map(\r\n              t => <TodoItem key={t.id} {...t}\r\n              />)\r\n          }\r\n          <Collapse bordered={false}>\r\n            <Panel header=\"今日完成任务\" key=\"1\">\r\n              {\r\n                this.completedTodos.filter(t=> dayjs(t.completed_at).isSame(dayjs(new Date()),'day')).map(\r\n                  t => {\r\n                    return <TodoItem key={t.id} {...t}/>;\r\n                  })\r\n              }\r\n            </Panel>\r\n          </Collapse>,\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\ninterface IPolygonProps {\r\n  data: any\r\n  totalFinishedCount: number\r\n  polygonWidth:null | number\r\n}\r\n\r\nclass Polygon extends React.Component<IPolygonProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  point = () => {\r\n    let {polygonWidth} = this.props\r\n    polygonWidth = polygonWidth === null ? 240 : polygonWidth\r\n    const dates = Object.keys(this.props.data).sort((a, b) => {\r\n      return Date.parse(a) - Date.parse(b);\r\n    });\r\n    const firstDay = dates[0];\r\n    if (firstDay) {\r\n\r\n      const range = new Date().getTime() - Date.parse(firstDay);\r\n      let finishedCount = 0;\r\n      let finalY;\r\n      const pointArray = dates.map(date => {\r\n        const x = (Date.parse(date) - Date.parse(firstDay)) / range * 240;\r\n        finishedCount += this.props.data[date].length;\r\n        const y = (1 - (finishedCount / this.props.totalFinishedCount)) * 60;\r\n        finalY = y;\r\n        return `${x},${y}`;\r\n      });\r\n      return ['0,60', ...pointArray, `${polygonWidth},${finalY}`, `${polygonWidth},60`].join(' ');\r\n    } else {\r\n      return `0,60 ${polygonWidth},60`;\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"Polygon\">\r\n        <svg style={{width: '100%', height: '60'}}>\r\n          <polygon fill=\"rgba(215,78,78,0.1)\" stroke=\"rgba(215,78,78,0.5)\" strokeWidth=\"1\" points={this.point()}/>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Polygon;\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport {updateTodo} from '../../../redux/actions/todos';\r\nimport axios from '../../../config/axios';\r\nimport './TodoHistoryTodoItem.scss';\r\n\r\ninterface ITodoHistoryTodoItemProps {\r\n  todo: any\r\n  itemType: string\r\n  updateTodo:(payload:any)=>void\r\n}\r\n\r\nclass TodoHistoryTodoItem extends React.Component<ITodoHistoryTodoItemProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  updateTodo= async (params:any)=>{\r\n    try{\r\n      const response = await axios.put(`todos/${this.props.todo.id}`,params)\r\n      this.props.updateTodo(response.data.resource)\r\n    }catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let action;\r\n    let formatText;\r\n    let time;\r\n    if (this.props.itemType === 'finished') {\r\n      formatText = 'HH:mm';\r\n      time = this.props.todo.updated_at;\r\n      action = (\r\n        <div>\r\n          <span onClick={()=>this.updateTodo({finished:false})}> 恢复 </span>\r\n          <span onClick={()=>this.updateTodo({deleted:true})}> 删除 </span>\r\n        </div>\r\n      );\r\n    } else if (this.props.itemType === 'deleted') {\r\n      formatText = 'YYYY-MM-DD';\r\n      time = this.props.todo.created_at;\r\n      action = (\r\n        <div>\r\n          <span onClick={()=>this.updateTodo({deleted:false})}> 恢复 </span>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"TodoHistoryTodoItem\" id=\"TodoHistoryTodoItem\">\r\n        <div className=\"text\">\r\n          <span className=\"time\">{dayjs(this.props.todo.updated_at).format(`${formatText}`)}</span>\r\n          <span className=\"description\">{this.props.todo.description}</span>\r\n        </div>\r\n        <div className=\"action\">\r\n          {action}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryTodoItem);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport _ from 'lodash';\r\nimport {Tabs} from 'antd';\r\nimport TodoHistoryTodoItem from './TodoHistoryTodoItem';\r\nimport './TodoHistory.scss';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ninterface ITodoHistoryProps {\r\n  todos: any[]\r\n}\r\n\r\n\r\n\r\nclass TodoHistory extends React.Component<ITodoHistoryProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted);\r\n  }\r\n  get deletedTodos() {\r\n    return this.props.todos.filter(t => t.deleted);\r\n  }\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => {\r\n      return dayjs(todo.updated_at).format('YYYY-MM-D');\r\n    });\r\n  }\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTodos).sort((a, b) => Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n  render() {\r\n    const weekdayFn = (weekday) => {\r\n      return (weekday === '0' ? '周日' : weekday === '1' ? '周一' : weekday === '2' ? '周二' :\r\n        weekday === '3' ? '周三' : weekday === '4' ? '周四' : weekday === '5' ? '周五' : '周六');\r\n    };\r\n    const finishedTodoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTodos\">\r\n          <div className=\"summary\">\r\n            <p className=\"date\">\r\n              <span>{dayjs(date).format('MM月D日')}</span>\r\n              <span>{weekdayFn(dayjs(date).format('d'))}</span>\r\n            </p>\r\n            <p className=\"finishedCount\">\r\n              完成了{this.dailyFinishedTodos[date].length}个任务\r\n            </p>\r\n          </div>\r\n          <div className=\"todoList\">\r\n            {\r\n              this.dailyFinishedTodos[date].map(todo => <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"finished\"/>)\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    const deletedTodoList = this.deletedTodos.map(todo => {\r\n      return (\r\n          <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"deleted\"/>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成任务\" key=\"1\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {finishedTodoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"已删除任务\" key=\"2\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {deletedTodoList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nexport default connect(mapStateToProps)(TodoHistory);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport axios from '../../../config/axios';\r\nimport {updateTomato, editTomato} from '../../../redux/actions/tomatoes';\r\nimport './TomatoHistoryItem.scss';\r\n\r\ninterface ITomatoHistoryItemProps {\r\n  tomato: any\r\n  itemType: string\r\n  updateTomato: (payload: any) => void\r\n  editTomato: (payload: number) => void\r\n}\r\n\r\ninterface ITomatoHistoryItemState {\r\n  editText: string\r\n  oldText:string\r\n}\r\n\r\nclass TomatoHistoryItem extends React.Component <ITomatoHistoryItemProps, ITomatoHistoryItemState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.tomato.description,\r\n      oldText:this.props.tomato.description\r\n    };\r\n  }\r\n  private inputRef = React.createRef<HTMLInputElement>()\r\n\r\n\r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.tomato.id}`, params);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.keyCode === 13 && this.state.editText !== '') {\r\n      this.updateTomato({description: this.state.editText});\r\n    }if(e.keyCode === 27 ){\r\n      this.updateTomato({description: this.state.oldText});\r\n    }\r\n  };\r\n\r\n  editTomato = () => {\r\n    this.props.editTomato(this.props.tomato.id);\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.inputRef.current && this.inputRef.current.focus();\r\n  }\r\n  render() {\r\n    const Editing = (\r\n      <div className=\"editing\">\r\n        <input type=\"text\" value={this.state.editText}\r\n               onChange={e => this.setState({editText: e.target.value})}\r\n               onKeyUp={this.onKeyUp}\r\n               ref = {this.inputRef}\r\n        />\r\n        <span className=\"button\" onClick={() => this.updateTomato({description: this.state.editText})}>提交</span>\r\n      </div>\r\n    );\r\n\r\n    const Text = (\r\n      <div className=\"action\">\r\n      <span className=\"description\" onDoubleClick={() => this.editTomato()}>\r\n      {this.props.tomato.description}\r\n    </span>\r\n        {\r\n          this.props.itemType === 'aborted' ?\r\n            <span className=\"button\" onClick={() => this.updateTomato({aborted: false})}>恢复至已完成</span> :\r\n            <span className=\"button\" onClick={() => this.updateTomato({aborted: true})}>移除</span>\r\n        }\r\n      </div>);\r\n\r\n    let action;\r\n    let formatText;\r\n    let time;\r\n    if (this.props.itemType === 'finished') {\r\n      formatText = 'HH:mm';\r\n      time = this.props.tomato.updated_at;\r\n      action = (\r\n        <div className=\"finished\">\r\n          <span className=\"time\"> {dayjs(this.props.tomato.started_at).format(`${formatText}`)} - {dayjs(this.props.tomato.ended_at).format(`${formatText}`)} </span>\r\n          {this.props.tomato.editing ? Editing : Text}\r\n        </div>\r\n      );\r\n    } else if (this.props.itemType === 'aborted') {\r\n      formatText = 'YYYY-MM-DD';\r\n      time = this.props.tomato.updated_at;\r\n      action = (\r\n        <div className=\"aborted\">\r\n          <span className=\"time\"> {dayjs(this.props.tomato.started_at).format(`${formatText}`)} </span>\r\n          {action = this.props.tomato.editing ? Editing : Text}\r\n        </div>\r\n      );\r\n\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"TomatoHistoryItem\" id=\"TomatoHistoryItem\">\r\n        <div className=\"text\">\r\n          {action}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  updateTomato,\r\n  editTomato,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TomatoHistoryItem);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Tabs} from 'antd';\r\nimport TomatoHistoryItem from './TomatoHistoryItem';\r\nimport dayjs from 'dayjs';\r\nimport _ from 'lodash';\r\nimport './TomatoHistory.scss';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ninterface ITomatoHistoryProps {\r\n  tomatoes: any[]\r\n}\r\n\r\nclass TomatoHistory extends React.Component<ITomatoHistoryProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n\r\n    return this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n  }\r\n\r\n  get abortedTomatoes() {\r\n    return this.props.tomatoes.filter(t => t.aborted);\r\n  }\r\n\r\n  get dailyFinishedTomatoes() {\r\n    const x = _.groupBy(this.finishedTomatoes, (tomato) => {\r\n      return dayjs(tomato.started_at).format('YYYY-MM-D');\r\n    });\r\n    return x;\r\n  }\r\n\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTomatoes).sort((a, b) => Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n\r\n  render() {\r\n    const weekdayFn = (weekday) => {\r\n      return (weekday === '0' ? '周日' : weekday === '1' ? '周一' : weekday === '2' ? '周二' :\r\n        weekday === '3' ? '周三' : weekday === '4' ? '周四' : weekday === '5' ? '周五' : '周六');\r\n    };\r\n    const finishedTomatoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTomatoes\">\r\n          <div className=\"summary\">\r\n            <p className=\"date\">\r\n              <span className=\"date_time\">{dayjs(date).format('MM月D日')}</span>\r\n              <span className=\"week_day\">{weekdayFn(dayjs(date).format('d'))}</span>\r\n            </p>\r\n            <p className=\"finishedCount\">\r\n              完成了 {this.dailyFinishedTomatoes[date].length} 个番茄\r\n              总计 {(this.dailyFinishedTomatoes[date].length * 25 / 60).toFixed(2)} 小时\r\n            </p>\r\n          </div>\r\n          <div className=\"tomatoList\">\r\n            { this.dailyFinishedTomatoes[date].map(tomato => <TomatoHistoryItem key={tomato.id} tomato={tomato} itemType=\"finished\"/>) }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    const abortedTomatoesList = this.abortedTomatoes.map(tomato => {\r\n      return (\r\n        <TomatoHistoryItem key={tomato.id} tomato={tomato} itemType=\"aborted\"/>\r\n      );\r\n    });\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成的番茄\" key=\"1\">\r\n          <div className=\"TomatoHistory\" id=\"TomatoHistory\">\r\n            {finishedTomatoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"打断记录\" key=\"2\">\r\n          <div className=\"TomatoHistory\" id=\"TomatoHistory\">\r\n            {abortedTomatoesList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(TomatoHistory);","import React from 'react';\r\nimport {Dropdown, Menu} from 'antd';\r\nimport {PoweroffOutlined, DownOutlined} from '@ant-design/icons';\r\nimport history from '../../config/history';\r\nimport axios from '../../config/axios';\r\nimport {connect} from 'react-redux';\r\nimport {initTodos} from '../../redux/actions/todos';\r\nimport {initTomatoes} from '../../redux/actions/tomatoes';\r\nimport Tomatoes from '../Tomatoes/Tomatoes';\r\nimport Todos from '../Todos/Todos';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport './Home.scss';\r\n\r\nconst logout = () => {\r\n  localStorage.setItem('x-token', '');\r\n  history.push('login');\r\n};\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"1\" onClick={logout}><PoweroffOutlined />注销</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\ninterface IIndexState {\r\n  user: any\r\n}\r\n\r\nclass Home extends React.Component<any, IIndexState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    };\r\n  }\r\n\r\n  async UNSAFE_componentWillMount() {\r\n    await this.getMe();\r\n    await this.getTodos();\r\n    await this.getTomatoes();\r\n  }\r\n\r\n  getTodos = async () => {\r\n    try {\r\n      const response = await axios.get('todos');\r\n      const todos = response.data.resources.map(t => Object.assign({}, t, {editing: false}));\r\n      this.props.initTodos(todos);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  getTomatoes = async () => {\r\n    try {\r\n      const response = await axios.get('tomatoes');\r\n      // 放入 redux 中\r\n      this.props.initTomatoes(response.data.resources);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n  getMe = async () => {\r\n    const response = await axios.get('me');\r\n    this.setState({user: response.data});\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\" id=\"Home\">\r\n        <header>\r\n          <span className=\"logo\">Pomodoro</span>\r\n          <Dropdown className=\"user\" overlay={menu}>\r\n            <span className=\"username\">\r\n              {(this.state.user && this.state.user.account) + ' , 你好'} <DownOutlined style={{marginLeft: 2}}/>\r\n            </span>\r\n          </Dropdown>\r\n        </header>\r\n        <main className=\"timerAndTodos\">\r\n          <Tomatoes/>\r\n          <Todos/>\r\n        </main>\r\n        <Statistics/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDisPatchToProps = {\r\n  initTodos,\r\n  initTomatoes\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDisPatchToProps)(Home);","import  React from 'react';\nimport {Router, Route} from 'react-router-dom';\nimport history from './config/history';\nimport Login from './components/Login/Login';\nimport SignUp from './components/SignUp/SignUp';\nimport Home from './components/Home/Home';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <div>\n          <Route exact={true} path=\"/\" component={Home}/>\n          <Route  path=\"/signup\" component={SignUp}/>\n          <Route  path=\"/login\" component={Login}/>\n        </div>\n\n      </Router>\n    );\n  }\n\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}
{"version":3,"sources":["redux/reducers/index.ts","redux/reducers/todos.ts","redux/actionTypes.ts","redux/reducers/tomatoes.ts","redux/store.ts","config/history.ts","config/axios.ts","components/Tomatoes/CountDown.tsx","components/Statistics/Statistics.tsx","components/Login/Login.tsx","components/SignUp/SignUp.tsx","redux/actions/todos.ts","redux/actions/tomatoes.ts","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Statistics/Polygon.tsx","components/Statistics/TodoHistory/TodoHistoryTodoItem.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/TomatoHistory/TomatoHistoryItem.tsx","components/Statistics/TomatoHistory/TomatoHistory.tsx","components/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["combineReducers","todos","state","action","type","payload","map","t","id","Object","assign","editing","tomatoes","store","createStore","rootReducer","publicUrl","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","push","timerId","View","SignUp","props","onChange","key","value","newState","setState","submit","a","account","password","post","log","window","alert","message","Error","this","className","placeholder","prefix","UserOutlined","e","target","Password","shape","onClick","to","React","Component","onChangeAccount","onChangePassword","onChangePasswordConformation","passwordConformation","password_confirmation","updateTodo","updateTomato","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","style","width","minute","Math","floor","second","confirm","TomatoAction","onKeyUp","keyCode","description","ended_at","Date","forceUpdate","showConfirm","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","abortTomato","onCancel","abortedReason","prompt","aborted","params","put","unfinishedTomato","data","resource","html","undefined","startTomato","startAt","parse","started_at","timeNow","getTime","CloseCircleOutlined","TomatoItem","dayjs","format","TomatoList","list","dates","d","finishedTomatoes","length","keys","sort","b","splice","Tomatoes","addTomato","finishTomatoes","filter","_","groupBy","tomato","mapDispatchToProps","connect","ownProps","TodoInput","postTodo","addTodo","suffix","EnterOutlined","TodoItem","inputRef","createRef","completed","completed_at","editTodo","editText","oldText","current","focus","Editing","ref","DeleteOutlined","deleted","Text","EditOutlined","stopPropagation","todoItemClass","classNames","checked","Panel","Todos","unCompletedTodos","bordered","header","completedTodos","isSame","unDeletedTodos","Polygon","point","polygonWidth","firstDay","finalY","range","finishedCount","pointArray","date","x","y","totalFinishedCount","join","height","fill","stroke","strokeWidth","points","TodoHistoryTodoItem","todo","formatText","itemType","finished","updated_at","TabPane","TodoHistory","finishedTodoList","finishedDates","weekday","dailyFinishedTodos","deletedTodoList","deletedTodos","defaultActiveKey","tab","finishedTodos","TomatoHistoryItem","editTomato","onDoubleClick","TomatoHistory","finishedTomatoList","dailyFinishedTomatoes","toFixed","abortedTomatoesList","abortedTomatoes","Statistics","polygonRef","handleResize","clientWidth","view","selected","addEventListener","bind","removeEventListener","dailyTomatoes","dailyTodos","menu","Item","PoweroffOutlined","Home","getTodos","get","resources","initTodos","getTomatoes","initTomatoes","getMe","user","overlay","DownOutlined","marginLeft","mapDisPatchToProps","App","exact","path","component","Login","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","href","origin","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.68a1092f.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\nexport default combineReducers({todos,tomatoes});","import {ADD_TODO, INIT_TODOS, EDIT_TODO, UPDATE_TODO} from '../actionTypes';\r\n\r\nexport default (state: any[] = [], action: any): any => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.payload];\r\n    case INIT_TODOS:\r\n      return [...action.payload];\r\n    case UPDATE_TODO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return t;\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload) {\r\n          return Object.assign({}, t, {editing: true});\r\n        } else {\r\n          return Object.assign({}, t, {editing: false});\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const ADD_TOMATO = 'ADD_TOMATO';\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES';\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO';\r\nexport const EDIT_TOMATO = 'EDIT_TOMATO';\r\n","import {EDIT_TOMATO,ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport default (state: any[] = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state];\r\n    case INIT_TOMATOES:\r\n      return [...action.payload];\r\n    case EDIT_TOMATO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload) {\r\n          return Object.assign({}, t, {editing: true});\r\n        } else {\r\n          return Object.assign({}, t, {editing: false});\r\n        }\r\n      });\r\n    case UPDATE_TOMATO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return t;\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store","import {createBrowserHistory} from 'history';\n\nconst ENV = process.env.NODE_ENV;\nlet publicUrl: string = '';\nif (ENV === 'development') {\n  publicUrl = '/';\n} else if (ENV === 'production') {\n  publicUrl = '/Pomodoro-Technique';\n}\nconst history = createBrowserHistory(\n  { basename: publicUrl }\n);\n\nexport default history;","import axios from 'axios';\r\nimport history from './history';\r\n\r\nconst appID = 'gxd4HcnaxxFM64hcN4nJmawQ';\r\nconst appSecret = 'uYmMu1oVickC7zdox6L7TLJ3';\r\n\r\n/* tslint:disable:no-string-literal */\r\nconst instance = axios.create({\r\n  baseURL: 'https://gp-server.hunger-valley.com/',\r\n  headers: {\r\n    't-app-id': appID,\r\n    't-app-secret': appSecret\r\n  }\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use((config) => {\r\n  const xToken = localStorage.getItem('x-token');\r\n  if (xToken) {\r\n    // 认证信息\r\n    config.headers['Authorization'] = `Bearer ${xToken}`;\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  console.error(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use((response) => {\r\n  // Do something with response data\r\n  if (response.headers['x-token']) {\r\n    localStorage.setItem('x-token', response.headers['x-token']);\r\n  }\r\n  return response;\r\n}, (error) => {\r\n  if (error.response.status === 401) {\r\n    history.push('/login');\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\n/* tslint:disable:no-string-literal */\r\nexport default instance;","import React from 'react';\r\nimport './CountDown.scss';\r\n\r\ninterface ICountDownProps {\r\n  timer: number\r\n  duration: number\r\n  onFinish: () => void\r\n}\r\n\r\ninterface ICountDownState {\r\n  countDown: number\r\n}\r\n\r\nlet timerId: NodeJS.Timeout;\r\n\r\nclass CountDown extends React.Component<ICountDownProps, ICountDownState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      countDown: this.props.timer\r\n    };\r\n  }\r\n\r\n  get countDown() {\r\n    const minute = Math.floor(this.state.countDown / 1000 / 60);\r\n    const second = Math.floor(this.state.countDown / 1000 % 60);\r\n    return (`${minute < 10 ? `0${minute}` : minute}:${second < 10 ? `0${second}` : second}`);\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    timerId = setInterval(() => {\r\n      let time = this.state.countDown;\r\n      this.setState((state) => ({countDown: state.countDown - 1000}));\r\n      document.title = `${this.countDown} - Pomodoro番茄工作法`;\r\n       if (time < 1000) {\r\n        this.props.onFinish();\r\n        document.title = \"Pomodoro番茄工作法\";\r\n        clearInterval(timerId);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    clearInterval(timerId);\r\n  }\r\n\r\n  render() {\r\n    // const percent = 1 - this.state.countDown / this.props.duration;\r\n    const percent = this.state.countDown / this.props.duration;\r\n    return (\r\n      <div className=\"CountDown\" id=\"CountDown\">\r\n        <span className=\"restTime\">{this.countDown}</span>\r\n        <div className=\"progress\" style={{width: `${percent * 100}%`}}/>\r\n      </div>\r\n    );\r\n  };\r\n};\r\nexport default CountDown;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './Statistics.scss';\r\nimport dayjs from 'dayjs';\r\nimport _ from 'lodash';\r\nimport Polygon from './Polygon';\r\nimport TodoHistory from './TodoHistory/TodoHistory';\r\nimport TomatoHistory from './TomatoHistory/TomatoHistory';\r\n\r\nenum View {\r\n  Todos = 'Todos',\r\n  Tomatoes = 'Tomatoes',\r\n  Statistics = 'Statistics'\r\n}\r\n\r\ninterface IStatisticsProps {\r\n  todos: any[]\r\n  tomatoes: any[]\r\n}\r\n\r\ninterface IStatisticsState {\r\n  view: string\r\n  polygonWidth: null | number\r\n  selected: string\r\n}\r\n\r\nclass Statistics extends React.Component<IStatisticsProps, IStatisticsState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      view: View.Tomatoes,\r\n      polygonWidth: null,\r\n      selected: 'TomatoesHistory'\r\n    };\r\n  }\r\n\r\n  private polygonRef = React.createRef<HTMLDivElement>();\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted);\r\n  }\r\n\r\n  get dailyTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => {\r\n      return dayjs(todo.updated_at).format('YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    return this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n  }\r\n\r\n  get dailyTomatoes() {\r\n    return _.groupBy(this.finishedTomatoes, (todo) => {\r\n      return dayjs(todo.updated_at).format('YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleResize();\r\n    window.addEventListener('resize', this.handleResize.bind(this)); //监听窗口大小改变\r\n  }\r\n\r\n  componentWillUnmount() { //一定要最后移除监听器，以防多个组件之间导致this的指向紊乱\r\n    window.removeEventListener('resize', this.handleResize.bind(this));\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.setState({\r\n      polygonWidth: this.polygonRef.current && this.polygonRef.current.clientWidth\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let view;\r\n    if (this.state.view === View.Todos) {\r\n      view = <TodoHistory/>;\r\n    } else if (this.state.view === View.Tomatoes) {\r\n      view = <TomatoHistory/>;\r\n    } else if (this.state.view === View.Statistics) {\r\n      view = <p>statistics</p>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"Statistics\" id=\"Statistics\">\r\n        <ul className=\"group\">\r\n          <li className={this.state.selected === 'TomatoesHistory' ? 'active' : ''}\r\n              onClick={() => this.setState({view: View.Tomatoes, selected: 'TomatoesHistory'})}>\r\n            <div className=\"description\">\r\n              <span className=\"title\">番茄历史</span>\r\n              <span className=\"subtitle\">累计完成番茄</span>\r\n              <span className=\"finishNumber\">{this.finishedTomatoes.length}</span>\r\n            </div>\r\n            <div className=\"polygon\" ref={this.polygonRef}>\r\n              <Polygon data={this.dailyTomatoes}\r\n                       totalFinishedCount={this.finishedTomatoes.length}\r\n                       polygonWidth={this.state.polygonWidth}/>\r\n            </div>\r\n          </li>\r\n          <li className={this.state.selected === 'TodosHistory' ? 'active' : ''}\r\n            onClick={() => this.setState({view: View.Todos,selected:'TodosHistory'})}>\r\n            <div className=\"description\">\r\n              <span className=\"title\">任务历史</span>\r\n              <span className=\"subtitle\">累计完成任务</span>\r\n              <span className=\"finishNumber\">{this.finishedTodos.length}</span>\r\n            </div>\r\n            <div className=\"polygon\">\r\n              <Polygon data={this.dailyTodos}\r\n                       totalFinishedCount={this.finishedTodos.length}\r\n                       polygonWidth={this.state.polygonWidth}/>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        {view}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n\r\n","import React from 'react';\r\nimport {Input, Button} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './Login.scss';\r\n\r\n\r\ninterface ILoginState {\r\n  account: string,\r\n  password: string,\r\n}\r\n\r\n\r\nclass SignUp extends React.Component<any, ILoginState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n\r\n  onChange = (key: keyof ILoginState, value: string) => {\r\n    const newState = {};\r\n    newState[key] = value;\r\n    this.setState(newState);\r\n  };\r\n\r\n\r\n  submit = async () => {\r\n    const {account, password} = this.state;\r\n    try {\r\n      await axios.post('sign_in/user', {\r\n        account,\r\n        password\r\n      });\r\n      console.log('成功');\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      window.alert('出错了');\r\n      console.log(e.message);\r\n      console.log('没有此用户');\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n\r\n  public render() {\r\n    const {account, password} = this.state;\r\n    return (\r\n      <div className=\"Login\" id=\"Login\">\r\n        <h1>欢迎使用番茄闹钟</h1>\r\n        <Input\r\n          placeholder=\"请输入你的用户名\"\r\n          prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n          value={account}\r\n          onChange={e => this.onChange('account', e.target.value)}\r\n        />\r\n        <Input.Password value={password} placeholder=\"请输入密码\" onChange={e => this.onChange('password', e.target.value)}/>\r\n        <div className=\"buttonWrapper\">\r\n          <Button type=\"primary\" shape=\"round\" className=\"loginButton\" onClick={this.submit}>登录</Button>\r\n          <p>还没有账号吗？\r\n            <Link to=\"/signup\"> 注册 </Link> 一下吧~\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport {Input, Button} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './SignUp.scss';\r\n\r\n\r\ninterface ISignUpState {\r\n  account: string,\r\n  password: string,\r\n  passwordConformation: string\r\n}\r\n\r\n\r\nclass SignUp extends React.Component<any, ISignUpState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n      passwordConformation: ''\r\n    };\r\n  }\r\n\r\n\r\n  // onChange = (key: keyof ISignUpState, value: string) => {\r\n  //   this.setState(() => {\r\n  //     const newState = {};\r\n  //     newState[key] = value;\r\n  //     return newState;\r\n  //   });\r\n  // };\r\n\r\n  onChangeAccount = (e) => {\r\n    this.setState({account: e.target.value});\r\n  };\r\n\r\n  onChangePassword = (e) => {\r\n    this.setState({password: e.target.value});\r\n  };\r\n\r\n  onChangePasswordConformation = (e) => {\r\n    this.setState({passwordConformation: e.target.value});\r\n  };\r\n\r\n\r\n  submit = async () => {\r\n    const {account, password, passwordConformation} = this.state;\r\n    try {\r\n      await axios.post('sign_up/user', {\r\n        account: account,\r\n        password: password,\r\n        password_confirmation: passwordConformation\r\n      });\r\n      console.log('成功');\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      window.alert('出错了');\r\n      console.log(e.message);\r\n      console.log('密码错误');\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n\r\n  public render() {\r\n    const {account, password, passwordConformation} = this.state;\r\n    return (\r\n      <div className=\"SignUp\" id=\"SignUp\">\r\n        <h1>注册</h1>\r\n        <Input\r\n          placeholder=\"请输入你的用户名\"\r\n          prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n          value={account}\r\n          onChange={this.onChangeAccount}\r\n        />\r\n        <Input.Password value={password} placeholder=\"请输入密码\" onChange={this.onChangePassword}/>\r\n        <Input.Password value={passwordConformation} placeholder=\"请确认密码\"\r\n                        onChange={this.onChangePasswordConformation}/>\r\n        <div className=\"buttonWrapper\">\r\n          <Button type=\"primary\" shape=\"round\" className=\"signUpButton\" onClick={this.submit}>注册</Button>\r\n          <p>如果你有账号，可以立即\r\n            <Link to=\"/login\"> 登录 </Link> 哦\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import {EDIT_TODO, UPDATE_TODO, ADD_TODO, INIT_TODOS} from '../actionTypes';\n\nexport const addTodo = (payload: any) => {\n  return {\n    type: ADD_TODO,\n    payload,\n  };\n};\nexport const initTodos = (payload: any[]) => {\n  return {\n    type: INIT_TODOS,\n    payload\n  };\n};\nexport const updateTodo = (payload: any) => {\n  return {\n    type: UPDATE_TODO,\n    payload\n  };\n};\nexport const editTodo = (payload: number) => {\n  return {\n    type: EDIT_TODO,\n    payload\n  };\n};\n\n\n\n\n","import {EDIT_TOMATO, INIT_TOMATOES, ADD_TOMATO, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport const addTomato = (payload: any) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  };\r\n};\r\nexport const initTomatoes = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  };\r\n};\r\nexport const updateTomato = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  };\r\n};\r\nexport const editTomato = (payload: number) => {\r\n  return {\r\n    type: EDIT_TOMATO,\r\n    payload\r\n  };\r\n};\r\n","import React, {Component} from 'react';\r\nimport {Button, Input,Modal} from 'antd';\r\nimport axios from '../../config/axios';\r\nimport CountDown from './CountDown';\r\n// import CountDownHook from './CountDownHook';\r\nimport {CloseCircleOutlined,ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport './TomatoAction.scss';\r\n\r\ninterface ITomatoActionProps {\r\n  startTomato: () => void;\r\n  unfinishedTomato: any;\r\n  updateTomato: (payload: any) => void;\r\n}\r\n\r\ninterface ITomatoActionState {\r\n  description: string;\r\n}\r\n\r\nconst confirm = Modal.confirm\r\n\r\nclass TomatoAction extends Component <ITomatoActionProps, ITomatoActionState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.updateTomato({\r\n        description: this.state.description,\r\n        ended_at: new Date()\r\n      });\r\n      this.setState({description: ''});\r\n    }\r\n  };\r\n\r\n  onFinish = () => {\r\n    this.forceUpdate(); // 强制更新\r\n  };\r\n\r\n  showConfirm=()=> {\r\n    confirm({\r\n      title: '您目前正在一个番茄工作时间中,要放弃这个番茄吗?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: '坚持就是胜利哦~~',\r\n      okText:'我不行了',\r\n      cancelText:'继续坚持',\r\n      onOk:()=> {\r\n        document.title = \"Pomodoro番茄工作法\";\r\n        this.abortTomato()\r\n      },\r\n      onCancel:()=> {\r\n        console.log('加油呀!');\r\n      },\r\n    });\r\n  }\r\n\r\n  abortTomato =  () => {\r\n    document.title = \"Pomodoro番茄工作法\";\r\n    const abortedReason = window.prompt('请输入打断原因:') || '番茄被打断'\r\n    this.updateTomato({aborted: true,description:abortedReason});\r\n  };\r\n\r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`, params);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    let html = <div/>;\r\n    if (this.props.unfinishedTomato === undefined) {\r\n      html = <Button className=\"startTomatoButton\" onClick={() => {this.props.startTomato();}}>开始番茄</Button>;\r\n      document.title = \"Pomodoro番茄工作法\";\r\n    } else {\r\n      const startAt = Date.parse(this.props.unfinishedTomato.started_at);\r\n      const duration = this.props.unfinishedTomato.duration;\r\n      const timeNow = new Date().getTime();\r\n      if (timeNow - startAt > duration) {\r\n        html = <div className=\"inputWrapper\">\r\n          <Input className=\"inputTask\"\r\n                 value={this.state.description}\r\n                 placeholder=\"请输入你刚刚完成的任务\"\r\n                 onChange={e => this.setState({description: e.target.value})}\r\n                 onKeyUp={e => this.onKeyUp(e)}\r\n          />\r\n          <CloseCircleOutlined className=\"abort\"\r\n                               onClick={this.showConfirm}/>\r\n        </div>;\r\n      } else if (timeNow - startAt < duration) {\r\n        let timer = duration - timeNow + startAt;\r\n        html = (\r\n          <div className=\"countDownWrapper\">\r\n            <CountDown timer={timer} onFinish={this.onFinish} duration={duration}/>\r\n            <CloseCircleOutlined className=\"abort\"\r\n                                 onClick={this.showConfirm}/>\r\n          </div>\r\n        );// 倒计时\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"TomatoAction\" id=\"TomatoAction\">\r\n        {html}\r\n      </div>\r\n    );\r\n  };\r\n};\r\nexport default TomatoAction;","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport './TomotoList.scss';\r\n\r\ninterface ITomatoListProps {\r\n  finishedTomatoes: any\r\n}\r\n\r\nconst TomatoItem = function (props) {\r\n  return (\r\n    <div className=\"TomatoItem\">\r\n      <span className=\"timeRange\"> {dayjs(props.started_at).format('HH:mm')} - {dayjs(props.ended_at).format('HH:mm')} </span>\r\n      <span className=\"taskDescription\"> {props.description} </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TomatoList extends React.Component <ITomatoListProps> {\r\n  // constructor(props) {super(props);}\r\n\r\n  get dates() {\r\n    // const thisday = dayjs(new Date()).date()\r\n    // const lastday = thisday - 2\r\n    const dates = Object.keys(this.props.finishedTomatoes);\r\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3);\r\n  }\r\n\r\n  public render() {\r\n    const list = this.dates.map(d => {\r\n      const tomatoes = this.props.finishedTomatoes[d];\r\n      return (\r\n        <div  key={d} className=\"dailyTomato\">\r\n          <div className=\"title\">\r\n            <span className=\"dateTime\"> {dayjs(d).format('M月DD日')} </span>\r\n            <span className=\"finishedCount\"> 完成了{tomatoes.length}个番茄 </span>\r\n          </div>\r\n          {\r\n            tomatoes.map(t => <TomatoItem key={t.id} {...t}/>)\r\n          }\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TomatoList\" id=\"TomatoList\">\r\n        {list}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoList;","import React, {Component} from 'react';\r\nimport './Tomatoes.scss';\r\nimport TomatoAction from './TomatoAction';\r\nimport {connect} from 'react-redux';\r\nimport {addTomato, updateTomato} from '../../redux/actions/tomatoes';\r\nimport TomatoList from './TomatoList';\r\nimport axios from '../../config/axios';\r\nimport _ from 'lodash';\r\n// import {format} from 'date-fns';\r\nimport dayjs from 'dayjs';\r\n\r\n\r\ninterface ITomatoesProps {\r\n  addTomato: (payload: any) => any\r\n  initTomatoes: (payload: any[]) => any\r\n  tomatoes: any[]\r\n  updateTomato: (payload: any) => any\r\n}\r\n\r\nclass Tomatoes extends Component <ITomatoesProps> {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter(t => !t.description && !t.ended_at && !t.aborted)[0];\r\n  }\r\n\r\n  get finishTomatoes() {\r\n    const finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n    // console.log(format(new Date(),'yyyy-MM-d'))\r\n    // console.log(finishedTomatoes);\r\n    // finishedTomatoes.map(t=>{\r\n    //   console.log(format(new Date(t.started_at),'yyyy-MM-d'))\r\n    // })\r\n    // const obj = _.groupBy(finishedTomatoes, (tomato) => {\r\n    //   return format(new Date(tomato.started_at), 'yyyy-MM-d');\r\n    // });\r\n    return _.groupBy(finishedTomatoes, (tomato) => {\r\n      return dayjs(tomato.started_at).format('YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n\r\n  startTomato = async () => {\r\n    try {\r\n      const response = await axios.post('tomatoes', {duration: 25 * 60 * 1000});\r\n      this.props.addTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Tomatoes\" id=\"Tomatoes\">\r\n        <TomatoAction startTomato={this.startTomato} unfinishedTomato={this.unfinishedTomato}\r\n                      updateTomato={this.props.updateTomato}/>\r\n        <TomatoList finishedTomatoes={this.finishTomatoes}/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);","import  React from 'react';\r\nimport {Input} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {addTodo} from '../../redux/actions/todos';\r\nimport axios from '../../config/axios';\r\nimport {EnterOutlined} from '@ant-design/icons';\r\n\r\ninterface ITodoInputState {\r\n  description: string\r\n}\r\n\r\n\r\ninterface ITodoInputProps {\r\n  addTodo: (payload: any) => any\r\n}\r\n\r\nclass TodoInput extends React.Component<ITodoInputProps, ITodoInputState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.postTodo();\r\n    }\r\n  };\r\n\r\n  postTodo = async () => {\r\n    try {\r\n      const response = await axios.post('todos', {description: this.state.description});\r\n      this.props.addTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n    this.setState(({description: ''}));\r\n  };\r\n\r\n\r\n  public render() {\r\n    const {description} = this.state;\r\n    const suffix = description === '' ? <span/> : <EnterOutlined onClick={this.postTodo}/>;\r\n    return (\r\n      <div className=\"TodoInput\" id=\"TodoInput\">\r\n        <Input\r\n          placeholder=\"添加新任务\"\r\n          value={description}\r\n          suffix={suffix}\r\n          onChange={e => this.setState({'description': e.target.value})}\r\n          onKeyUp={this.onKeyUp}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Checkbox} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {editTodo, updateTodo} from '../../redux/actions/todos';\r\nimport classNames from 'classnames';\r\nimport './TodoItem.scss';\r\nimport {\r\n  EnterOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined\r\n} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\n\r\n\r\ninterface ITodoItemProps {\r\n  id: number;\r\n  description: string;\r\n  completed: boolean;\r\n  editing: boolean;\r\n  editTodo: (id: number) => any;\r\n  updateTodo: (payload: any) => any;\r\n  onEditRange: () => void\r\n}\r\n\r\ninterface ITodoItemState {\r\n  editText: string\r\n  oldText: string\r\n}\r\n\r\n// let timeId;\r\n\r\nclass TodoItem extends React.Component<ITodoItemProps, ITodoItemState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.description,\r\n      oldText: this.props.description\r\n    };\r\n  }\r\n\r\n  private inputRef = React.createRef<HTMLInputElement>();\r\n\r\n  componentDidUpdate() {\r\n    this.inputRef.current && this.inputRef.current.focus();\r\n    // this.onEditRange();\r\n  }\r\n\r\n  // onEditRange = () => {\r\n  //   let element = this.inputRef.current;\r\n  //   if (element) {\r\n  //     element.focus();\r\n  //     // let start = element.selectionStart;\r\n  //     // let end = element.selectionEnd;\r\n  //     // start && end && element.setSelectionRange(start, end);\r\n  //     // element.setSelectionRange(0, -1);\r\n  //     // console.log(this.inputRef.current);\r\n  //   }\r\n  // };\r\n\r\n  updateTodo = async (params: any) => {\r\n    if (params.completed) {\r\n      params.completed_at = new Date();\r\n    }\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  editTodo = () => {\r\n    // if(timeId){clearTimeout(timeId)};\r\n    this.props.editTodo(this.props.id);\r\n  };\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.keyCode === 13 && this.state.editText !== '') {\r\n      this.updateTodo({description: this.state.editText});\r\n    } else if (e.keyCode === 27) {\r\n      this.updateTodo({description: this.state.oldText});\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const Editing = (\r\n      <div className=\"editing\">\r\n        <input type=\"text\" value={this.state.editText}\r\n               onChange={e => this.setState({editText: e.target.value})}\r\n               onKeyUp={this.onKeyUp}\r\n               ref={this.inputRef}\r\n        />\r\n        <div className=\"iconWrapper\">\r\n          <EnterOutlined onClick={() => this.updateTodo({description: this.state.editText})}/>\r\n          <DeleteOutlined onClick={e => this.updateTodo({deleted: true})}/>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const Text = <span className=\"text\" onClick={() => this.updateTodo({completed: !this.props.completed})}>\r\n      {this.props.description}\r\n      <EditOutlined onClick={e => {\r\n        e.stopPropagation();\r\n        this.editTodo();\r\n      }}/>\r\n    </span>;\r\n    // const Text2 = <span onDoubleClick={this.toEditing}>\r\n    //                     onClick={()=>{\r\n    //                         if(timeId){clearTimeout(timeId)}\r\n    //                           timeId = setTimeout(() => {\r\n    //                             this.update({completed: !this.props.completed});\r\n    //                           }, 200);\r\n    //                     }}\r\n    //               {this.props.description}\r\n    //               </span> ;\r\n\r\n    // yarn add classnames\r\n    const todoItemClass = classNames({\r\n      TodoItem: true,\r\n      editing: this.props.editing,\r\n      completed: this.props.completed\r\n    });\r\n\r\n    return (\r\n      <div className={todoItemClass} id=\"TodoItem\">\r\n        <Checkbox checked={this.props.completed}\r\n                  onChange={e => this.updateTodo({completed: e.target.checked})}\r\n        />\r\n        {this.props.editing ? Editing : Text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  editTodo,\r\n  updateTodo,\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {updateTodo} from '../../redux/actions/todos';\r\nimport TodoInput from './TodoInput';\r\nimport TodoItem from './TodoItem';\r\nimport './Todos.scss';\r\nimport {Collapse} from 'antd';\r\nimport dayjs from 'dayjs';\r\n\r\nconst {Panel} = Collapse;\r\n\r\nclass Todos extends React.Component<any> {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  get unDeletedTodos() {\r\n    return this.props.todos.filter(t => !t.deleted);\r\n  }\r\n\r\n  get unCompletedTodos() {\r\n    return this.unDeletedTodos.filter(t => !t.completed);\r\n  }\r\n\r\n  get completedTodos() {\r\n    return this.unDeletedTodos.filter(t => t.completed);\r\n  }\r\n\r\n  componentDidMount()  {\r\n\r\n  }\r\n  public render() {\r\n    return (\r\n      <div className=\"Todos\" id=\"Todos\">\r\n        <TodoInput/>\r\n        <div className=\"todoList\">\r\n          {\r\n            this.unCompletedTodos.map(\r\n              t => <TodoItem key={t.id} {...t}\r\n              />)\r\n          }\r\n          <Collapse bordered={false}>\r\n            <Panel header=\"今日完成任务\" key=\"1\">\r\n              {\r\n                this.completedTodos.filter(t=> dayjs(t.completed_at).isSame(dayjs(new Date()),'day')).map(\r\n                  t => {\r\n                    return <TodoItem key={t.id} {...t}/>;\r\n                  })\r\n              }\r\n            </Panel>\r\n          </Collapse>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\ninterface IPolygonProps {\r\n  data: any\r\n  totalFinishedCount: number\r\n  polygonWidth:null | number\r\n}\r\n\r\nclass Polygon extends React.Component<IPolygonProps> {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  point = () => {\r\n    let {polygonWidth} = this.props\r\n    polygonWidth = polygonWidth === null ? 240 : polygonWidth\r\n    const dates = Object.keys(this.props.data).sort((a, b) => {\r\n      return Date.parse(a) - Date.parse(b);\r\n    });\r\n    const firstDay = dates[0];\r\n    if (firstDay) {\r\n\r\n      const range = new Date().getTime() - Date.parse(firstDay);\r\n      let finishedCount = 0;\r\n      let finalY;\r\n      const pointArray = dates.map(date => {\r\n        const x = (Date.parse(date) - Date.parse(firstDay)) / range * 240;\r\n        finishedCount += this.props.data[date].length;\r\n        const y = (1 - (finishedCount / this.props.totalFinishedCount)) * 60;\r\n        finalY = y;\r\n        return `${x},${y}`;\r\n      });\r\n      return ['0,60', ...pointArray, `${polygonWidth},${finalY}`, `${polygonWidth},60`].join(' ');\r\n    } else {\r\n      return `0,60 ${polygonWidth},60`;\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"Polygon\">\r\n        <svg style={{width: '100%', height: '60'}}>\r\n          <polygon fill=\"rgba(215,78,78,0.1)\" stroke=\"rgba(215,78,78,0.5)\" strokeWidth=\"1\" points={this.point()}/>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Polygon;\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport {updateTodo} from '../../../redux/actions/todos';\r\nimport axios from '../../../config/axios';\r\nimport './TodoHistoryTodoItem.scss';\r\n\r\ninterface ITodoHistoryTodoItemProps {\r\n  todo: any\r\n  itemType: string\r\n  updateTodo:(payload:any)=>void\r\n}\r\n\r\nclass TodoHistoryTodoItem extends React.Component<ITodoHistoryTodoItemProps> {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  updateTodo= async (params:any)=>{\r\n    try{\r\n      const response = await axios.put(`todos/${this.props.todo.id}`,params)\r\n      this.props.updateTodo(response.data.resource)\r\n    }catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let action;\r\n    let formatText;\r\n    // let time;\r\n    if (this.props.itemType === 'finished') {\r\n      formatText = 'HH:mm';\r\n      // time = this.props.todos.updated_at;\r\n      action = (\r\n        <div>\r\n          <span onClick={()=>this.updateTodo({finished:false})}> 恢复 </span>\r\n          <span onClick={()=>this.updateTodo({deleted:true})}> 删除 </span>\r\n        </div>\r\n      );\r\n    } else if (this.props.itemType === 'deleted') {\r\n      formatText = 'YYYY-MM-DD';\r\n      // time = this.props.todos.created_at;\r\n      action = (\r\n        <div>\r\n          <span onClick={()=>this.updateTodo({deleted:false})}> 恢复 </span>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"TodoHistoryTodoItem\" id=\"TodoHistoryTodoItem\">\r\n        <div className=\"text\">\r\n          <span className=\"time\">{dayjs(this.props.todo.updated_at).format(`${formatText}`)}</span>\r\n          <span className=\"description\">{this.props.todo.description}</span>\r\n        </div>\r\n        <div className=\"action\">\r\n          {action}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryTodoItem);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport _ from 'lodash';\r\nimport {Tabs} from 'antd';\r\nimport TodoHistoryTodoItem from './TodoHistoryTodoItem';\r\nimport './TodoHistory.scss';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ninterface ITodoHistoryProps {\r\n  todos: any[]\r\n}\r\n\r\n\r\n\r\nclass TodoHistory extends React.Component<ITodoHistoryProps> {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted);\r\n  }\r\n  get deletedTodos() {\r\n    return this.props.todos.filter(t => t.deleted);\r\n  }\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => {\r\n      return dayjs(todo.updated_at).format('YYYY-MM-D');\r\n    });\r\n  }\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTodos).sort((a, b) => Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n  render() {\r\n    const weekdayFn = (weekday) => {\r\n      return (weekday === '0' ? '周日' : weekday === '1' ? '周一' : weekday === '2' ? '周二' :\r\n        weekday === '3' ? '周三' : weekday === '4' ? '周四' : weekday === '5' ? '周五' : '周六');\r\n    };\r\n    const finishedTodoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTodos\">\r\n          <div className=\"summary\">\r\n            <p className=\"date\">\r\n              <span>{dayjs(date).format('MM月D日')}</span>\r\n              <span>{weekdayFn(dayjs(date).format('d'))}</span>\r\n            </p>\r\n            <p className=\"finishedCount\">\r\n              完成了{this.dailyFinishedTodos[date].length}个任务\r\n            </p>\r\n          </div>\r\n          <div className=\"todoList\">\r\n            {\r\n              this.dailyFinishedTodos[date].map(todo => <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"finished\"/>)\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    const deletedTodoList = this.deletedTodos.map(todo => {\r\n      return (\r\n          <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"deleted\"/>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成任务\" key=\"1\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {finishedTodoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"已删除任务\" key=\"2\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {deletedTodoList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nexport default connect(mapStateToProps)(TodoHistory);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport axios from '../../../config/axios';\r\nimport {updateTomato, editTomato} from '../../../redux/actions/tomatoes';\r\nimport './TomatoHistoryItem.scss';\r\n\r\ninterface ITomatoHistoryItemProps {\r\n  tomato: any\r\n  itemType: string\r\n  updateTomato: (payload: any) => void\r\n  editTomato: (payload: number) => void\r\n}\r\n\r\ninterface ITomatoHistoryItemState {\r\n  editText: string\r\n  oldText:string\r\n}\r\n\r\nclass TomatoHistoryItem extends React.Component <ITomatoHistoryItemProps, ITomatoHistoryItemState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.tomato.description,\r\n      oldText:this.props.tomato.description\r\n    };\r\n  }\r\n  private inputRef = React.createRef<HTMLInputElement>()\r\n\r\n\r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.tomato.id}`, params);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.keyCode === 13 && this.state.editText !== '') {\r\n      this.updateTomato({description: this.state.editText});\r\n    }if(e.keyCode === 27 ){\r\n      this.updateTomato({description: this.state.oldText});\r\n    }\r\n  };\r\n\r\n  editTomato = () => {\r\n    this.props.editTomato(this.props.tomato.id);\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.inputRef.current && this.inputRef.current.focus();\r\n  }\r\n  render() {\r\n    const Editing = (\r\n      <div className=\"editing\">\r\n        <input type=\"text\" value={this.state.editText}\r\n               onChange={e => this.setState({editText: e.target.value})}\r\n               onKeyUp={this.onKeyUp}\r\n               ref = {this.inputRef}\r\n        />\r\n        <span className=\"button\" onClick={() => this.updateTomato({description: this.state.editText})}>提交</span>\r\n      </div>\r\n    );\r\n\r\n    const Text = (\r\n      <div className=\"action\">\r\n      <span className=\"description\" onDoubleClick={() => this.editTomato()}>\r\n      {this.props.tomato.description}\r\n    </span>\r\n        {\r\n          this.props.itemType === 'aborted' ?\r\n            <span className=\"button\" onClick={() => this.updateTomato({aborted: false})}>恢复至已完成</span> :\r\n            <span className=\"button\" onClick={() => this.updateTomato({aborted: true})}>移除</span>\r\n        }\r\n      </div>);\r\n\r\n    let action;\r\n    let formatText;\r\n    // let time;\r\n    if (this.props.itemType === 'finished') {\r\n      formatText = 'HH:mm';\r\n      // time = this.props.tomato.updated_at;\r\n      action = (\r\n        <div className=\"finished\">\r\n          <span className=\"time\"> {dayjs(this.props.tomato.started_at).format(`${formatText}`)} - {dayjs(this.props.tomato.ended_at).format(`${formatText}`)} </span>\r\n          {this.props.tomato.editing ? Editing : Text}\r\n        </div>\r\n      );\r\n    } else if (this.props.itemType === 'aborted') {\r\n      formatText = 'YYYY-MM-DD';\r\n      // time = this.props.tomato.updated_at;\r\n      action = (\r\n        <div className=\"aborted\">\r\n          <span className=\"time\"> {dayjs(this.props.tomato.started_at).format(`${formatText}`)} </span>\r\n          {action = this.props.tomato.editing ? Editing : Text}\r\n        </div>\r\n      );\r\n\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"TomatoHistoryItem\" id=\"TomatoHistoryItem\">\r\n        <div className=\"text\">\r\n          {action}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  updateTomato,\r\n  editTomato,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TomatoHistoryItem);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Tabs} from 'antd';\r\nimport TomatoHistoryItem from './TomatoHistoryItem';\r\nimport dayjs from 'dayjs';\r\nimport _ from 'lodash';\r\nimport './TomatoHistory.scss';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ninterface ITomatoHistoryProps {\r\n  tomatoes: any[]\r\n}\r\n\r\nclass TomatoHistory extends React.Component<ITomatoHistoryProps> {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  get finishedTomatoes() {\r\n\r\n    return this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n  }\r\n\r\n  get abortedTomatoes() {\r\n    return this.props.tomatoes.filter(t => t.aborted);\r\n  }\r\n\r\n  get dailyFinishedTomatoes() {\r\n    const x = _.groupBy(this.finishedTomatoes, (tomato) => {\r\n      return dayjs(tomato.started_at).format('YYYY-MM-D');\r\n    });\r\n    return x;\r\n  }\r\n\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTomatoes).sort((a, b) => Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n\r\n  render() {\r\n    const weekdayFn = (weekday) => {\r\n      return (weekday === '0' ? '周日' : weekday === '1' ? '周一' : weekday === '2' ? '周二' :\r\n        weekday === '3' ? '周三' : weekday === '4' ? '周四' : weekday === '5' ? '周五' : '周六');\r\n    };\r\n    const finishedTomatoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTomatoes\">\r\n          <div className=\"summary\">\r\n            <p className=\"date\">\r\n              <span className=\"date_time\">{dayjs(date).format('MM月D日')}</span>\r\n              <span className=\"week_day\">{weekdayFn(dayjs(date).format('d'))}</span>\r\n            </p>\r\n            <p className=\"finishedCount\">\r\n              完成了 {this.dailyFinishedTomatoes[date].length} 个番茄\r\n              总计 {(this.dailyFinishedTomatoes[date].length * 25 / 60).toFixed(2)} 小时\r\n            </p>\r\n          </div>\r\n          <div className=\"tomatoList\">\r\n            { this.dailyFinishedTomatoes[date].map(tomato => <TomatoHistoryItem key={tomato.id} tomato={tomato} itemType=\"finished\"/>) }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    const abortedTomatoesList = this.abortedTomatoes.map(tomato => {\r\n      return (\r\n        <TomatoHistoryItem key={tomato.id} tomato={tomato} itemType=\"aborted\"/>\r\n      );\r\n    });\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成的番茄\" key=\"1\">\r\n          <div className=\"TomatoHistory\" id=\"TomatoHistory\">\r\n            {finishedTomatoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"打断记录\" key=\"2\">\r\n          <div className=\"TomatoHistory\" id=\"TomatoHistory\">\r\n            {abortedTomatoesList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(TomatoHistory);","import React from 'react';\r\nimport {Dropdown, Menu} from 'antd';\r\nimport {PoweroffOutlined, DownOutlined} from '@ant-design/icons';\r\nimport history from '../../config/history';\r\nimport axios from '../../config/axios';\r\nimport {connect} from 'react-redux';\r\nimport {initTodos} from '../../redux/actions/todos';\r\nimport {initTomatoes} from '../../redux/actions/tomatoes';\r\nimport Tomatoes from '../Tomatoes/Tomatoes';\r\nimport Todos from '../Todos/Todos';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport './Home.scss';\r\n\r\nconst logout = () => {\r\n  localStorage.setItem('x-token', '');\r\n  history.push('login');\r\n};\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"1\" onClick={logout}><PoweroffOutlined />注销</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\ninterface IIndexState {\r\n  user: any\r\n}\r\n\r\nclass Home extends React.Component<any, IIndexState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    };\r\n  }\r\n\r\n  async UNSAFE_componentWillMount() {\r\n    await this.getMe();\r\n    await this.getTodos();\r\n    await this.getTomatoes();\r\n  }\r\n\r\n  getTodos = async () => {\r\n    try {\r\n      const response = await axios.get('todos');\r\n      const todos = response.data.resources.map(t => Object.assign({}, t, {editing: false}));\r\n      this.props.initTodos(todos);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  getTomatoes = async () => {\r\n    try {\r\n      const response = await axios.get('tomatoes');\r\n      // 放入 redux 中\r\n      this.props.initTomatoes(response.data.resources);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n  getMe = async () => {\r\n    const response = await axios.get('me');\r\n    this.setState({user: response.data});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\" id=\"Home\">\r\n        <header>\r\n          <span className=\"logo\">Pomodoro</span>\r\n          <Dropdown className=\"user\" overlay={menu}>\r\n            <span className=\"username\">\r\n              {(this.state.user && this.state.user.account) + ' , 你好'} <DownOutlined style={{marginLeft: 2}}/>\r\n            </span>\r\n          </Dropdown>\r\n        </header>\r\n        <main className=\"timerAndTodos\">\r\n          <Tomatoes/>\r\n          <Todos/>\r\n        </main>\r\n        <Statistics/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDisPatchToProps = {\r\n  initTodos,\r\n  initTomatoes\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDisPatchToProps)(Home);","import React from 'react';\nimport {Router, Route} from 'react-router-dom';\nimport history from './config/history';\nimport Login from './components/Login/Login';\nimport SignUp from './components/SignUp/SignUp';\nimport Home from './components/Home/Home';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <div>\n          <Route exact={true} path=\"/\" component={Home}/>\n          <Route path=\"/signup\" component={SignUp}/>\n          <Route path=\"/login\" component={Login}/>\n        </div>\n      </Router>\n    );\n  }\n\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n// registerServiceWorker();"],"sourceRoot":""}
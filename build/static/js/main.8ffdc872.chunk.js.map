{"version":3,"sources":["redux/reducers/index.ts","redux/reducers/todos.ts","redux/actionTypes.ts","redux/reducers/tomatoes.ts","redux/store.ts","config/history.ts","config/axios.ts","components/Tomatoes/CountDown.tsx","components/Login/Login.tsx","components/SignUp/SignUp.tsx","redux/actions/todos.ts","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","redux/actions/tomatoes.ts","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Statistics/Polygon.tsx","components/Statistics/TodoHIstory/TodoHistoryTodoItem.tsx","components/Statistics/TodoHIstory/TodoHistory.tsx","components/Statistics/Statistics.tsx","components/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["combineReducers","todos","state","action","type","payload","map","t","id","Object","assign","editing","tomatoes","store","createStore","rootReducer","publicUrl","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","push","timerId","SignUp","props","onChange","key","value","setState","newState","submit","a","account","password","post","log","Error","this","className","placeholder","prefix","UserOutlined","e","target","Password","shape","onClick","to","React","Component","passwordConformation","password_confirmation","updateTodo","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","style","width","minute","Math","floor","second","confirm","TomatoAction","onKeyUp","keyCode","description","updateTomato","ended_at","Date","forceUpdate","showConfirm","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","abortTomato","onCancel","aborted","params","put","unfinishedTomato","data","resource","html","undefined","startTomato","startAt","parse","started_at","timeNow","getTime","CloseCircleOutlined","TomatoItem","dayjs","format","TomatoList","list","dates","d","finishedTomatoes","length","keys","sort","b","splice","Tomatoes","addTomato","finishTomatoes","filter","_","groupBy","tomato","mapDispatchToProps","connect","ownProps","TodoInput","postTodo","addTodo","suffix","EnterOutlined","TodoItem","inputRef","createRef","completed","completed_at","editTodo","editText","current","focus","Editing","ref","DeleteOutlined","deleted","Text","EditOutlined","stopPropagation","todoItemClass","classNames","checked","Todos","unCompletedTodos","unDeletedTodos","Polygon","point","firstDay","finalY","range","finishedCount","pointArray","date","x","y","totalFinishedCount","join","fill","stroke","strokeWidth","points","TodoHistoryTodoItem","todo","formatText","itemType","updated_at","finished","created_at","TabPane","TodoHistory","finishedTodoList","finishedDates","dailyFinishedTodos","deletedTodoList","deletedTodos","defaultActiveKey","tab","finishedTodos","Statistics","dailyTodos","menu","Item","Home","getTodos","get","resources","initTodos","getTomatoes","initTomatoes","getMe","user","overlay","DownOutlined","marginLeft","mapDisPatchToProps","App","exact","path","component","Login","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8ffdc872.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\nexport default combineReducers({todos,tomatoes});","import {ADD_TODO, INIT_TODOS, EDIT_TODO, UPDATE_TODO} from '../actionTypes';\r\n\r\nexport default (state: any[] = [], action: any): any => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.payload];\r\n    case INIT_TODOS:\r\n      return [...action.payload];\r\n    case UPDATE_TODO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return t;\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map(t => {\r\n        if (t.id === action.payload) {\r\n          return Object.assign({}, t, {editing: true});\r\n        } else {\r\n          return Object.assign({}, t, {editing: false});\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const ADD_TOMATO = 'ADD_TOMATO';\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES';\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO';\r\n","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport default (state: any[] = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state];\r\n    case INIT_TOMATOES:\r\n      return [...action.payload];\r\n    case UPDATE_TOMATO:\r\n      return state.map(t=>{\r\n        if(t.id === action.payload.id){\r\n          return action.payload\r\n        }else{\r\n          return t\r\n        }\r\n      })\r\n    default:\r\n      return state;\r\n  }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store","import {createBrowserHistory} from 'history';\n\nconst ENV = process.env.NODE_ENV;\nlet publicUrl: string = '';\nif (ENV === 'development') {\n  publicUrl = '/';\n} else if (ENV === 'production') {\n  publicUrl = '/Pomodoro-Technique';\n}\nconst history = createBrowserHistory({\n  basename: publicUrl\n});\n\nexport default history;","import axios from 'axios';\r\nimport history from './history';\r\n\r\nconst appID = 'gxd4HcnaxxFM64hcN4nJmawQ';\r\nconst appSecret = 'uYmMu1oVickC7zdox6L7TLJ3';\r\n\r\n/* tslint:disable:no-string-literal */\r\nconst instance = axios.create({\r\n  baseURL: 'https://gp-server.hunger-valley.com/',\r\n  // timeout:1000,\r\n  headers: {\r\n    't-app-id': appID,\r\n    't-app-secret': appSecret\r\n  }\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use((config) => {\r\n  const xToken = localStorage.getItem('x-token');\r\n  if (xToken) {\r\n    // 认证信息\r\n    config.headers['Authorization'] = `Bearer ${xToken}`;\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  console.error(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use((response) => {\r\n  // Do something with response data\r\n  if (response.headers['x-token']) {\r\n    localStorage.setItem('x-token', response.headers['x-token']);\r\n  }\r\n  return response;\r\n}, (error) => {\r\n  if (error.response.status === 401) {\r\n    history.push('/login')\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\n/* tslint:disable:no-string-literal */\r\nexport default instance;","import React from 'react';\r\nimport './CountDown.scss';\r\n\r\ninterface ICountDownProps {\r\n  timer: number\r\n  duration: number\r\n  onFinish: () => void\r\n}\r\n\r\ninterface ICountDownState {\r\n  countDown: number\r\n}\r\n\r\nlet timerId: NodeJS.Timeout;\r\n\r\nclass CountDown extends React.Component<ICountDownProps, ICountDownState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      countDown: this.props.timer\r\n    };\r\n  }\r\n\r\n  get countDown() {\r\n    const minute = Math.floor(this.state.countDown / 1000 / 60);\r\n    const second = Math.floor(this.state.countDown / 1000 % 60);\r\n    return (`${minute < 10 ? `0${minute}` : minute}:${second < 10 ? `0${second}` : second}`);\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    timerId = setInterval(() => {\r\n      let time = this.state.countDown;\r\n      this.setState((state) => ({countDown: state.countDown - 1000}));\r\n      document.title = `${this.countDown} - Pomodoro番茄工作法`;\r\n       if (time < 1000) {\r\n        this.props.onFinish();\r\n        document.title = \"Pomodoro番茄工作法\";\r\n        clearInterval(timerId);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    clearInterval(timerId);\r\n  }\r\n\r\n  render() {\r\n    const percent = 1 - this.state.countDown / this.props.duration;\r\n    return (\r\n      <div className=\"CountDown\" id=\"CountDown\">\r\n        <span className=\"restTime\">{this.countDown}</span>\r\n        <div className=\"progress\" style={{width: `${percent * 100}%`}}/>\r\n      </div>\r\n    );\r\n  };\r\n};\r\nexport default CountDown;\r\n","import React from 'react';\r\nimport {Input, Button} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './Login.scss';\r\n\r\n\r\ninterface ILoginState {\r\n  account: string,\r\n  password: string,\r\n}\r\n\r\n\r\nclass SignUp extends React.Component<any, ILoginState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n\r\n  onChange = (key: keyof ILoginState, value: string) => {\r\n    this.setState(() => {\r\n      const newState = {};\r\n      newState[key] = value;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n\r\n  submit = async () => {\r\n    const {account, password} = this.state;\r\n    try {\r\n      await axios.post('sign_in/user', {\r\n        account,\r\n        password\r\n      });\r\n      console.log('成功');\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n\r\n  public render() {\r\n    const {account, password} = this.state;\r\n    return (\r\n      <div className=\"Login\" id=\"Login\">\r\n        <h1>欢迎使用番茄闹钟</h1>\r\n        <Input\r\n          placeholder=\"请输入你的用户名\"\r\n          prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n          value={account}\r\n          onChange={e => this.onChange('account', e.target.value)}\r\n        />\r\n        <Input.Password value={password} placeholder=\"请输入密码\" onChange={e => this.onChange('password', e.target.value)}/>\r\n        <div className=\"buttonWrapper\">\r\n          <Button type=\"primary\" shape=\"round\" className=\"loginButton\" onClick={this.submit}>登录</Button>\r\n          <p>还没有账号吗？\r\n            <Link to=\"/signup\"> 注册 </Link> 一下吧~\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport {Input, Button} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './SignUp.scss';\r\n\r\n\r\ninterface ISignUpState {\r\n  account: string,\r\n  password: string,\r\n  passwordConformation: string\r\n}\r\n\r\n\r\nclass SignUp extends React.Component<any, ISignUpState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n      passwordConformation: ''\r\n    };\r\n  }\r\n\r\n\r\n  onChange = (key: keyof ISignUpState, value: string) => {\r\n    this.setState(() => {\r\n      const newState = {};\r\n      newState[key] = value;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n\r\n  submit = async () => {\r\n    const {account, password, passwordConformation} = this.state;\r\n    try {\r\n      await axios.post('sign_up/user', {\r\n        account: account,\r\n        password: password,\r\n        password_confirmation: passwordConformation\r\n      });\r\n      console.log('成功');\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n\r\n  public render() {\r\n    const {account, password, passwordConformation} = this.state;\r\n    return (\r\n      <div className=\"SignUp\" id=\"SignUp\">\r\n        <h1>注册</h1>\r\n        <Input\r\n          placeholder=\"请输入你的用户名\"\r\n          prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n          value={account}\r\n          onChange={e=>this.onChange('account',e.target.value)}\r\n        />\r\n        <Input.Password value={password} placeholder=\"请输入密码\" onChange={e=>this.onChange('password',e.target.value)}/>\r\n        <Input.Password value={passwordConformation} placeholder=\"请确认密码\" onChange={e=>this.onChange('passwordConformation',e.target.value)}/>\r\n        <div className=\"buttonWrapper\">\r\n          <Button type=\"primary\" shape=\"round\" className=\"signUpButton\" onClick={this.submit}>注册</Button>\r\n          <p>如果你有账号，可以立即\r\n            <Link to=\"/login\"> 登录 </Link> 哦\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import {EDIT_TODO, UPDATE_TODO, ADD_TODO, INIT_TODOS} from '../actionTypes';\n\nexport const addTodo = (payload: any) => {\n  return {\n    type: ADD_TODO,\n    payload,\n  };\n};\nexport const initTodos = (payload: any[]) => {\n  return {\n    type: INIT_TODOS,\n    payload\n  };\n};\nexport const updateTodo = (payload: any) => {\n  return {\n    type: UPDATE_TODO,\n    payload\n  };\n};\nexport const editTodo = (payload: number) => {\n  return {\n    type: EDIT_TODO,\n    payload\n  };\n};\n\n\n\n\n","import React, {Component} from 'react';\r\nimport {Button, Input,Modal} from 'antd';\r\nimport axios from '../../config/axios';\r\nimport CountDown from './CountDown';\r\n// import CountDownHook from './CountDownHook';\r\nimport {CloseCircleOutlined,ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport './TomatoAction.scss';\r\n\r\ninterface ITomatoActionProps {\r\n  startTomato: () => void;\r\n  unfinishedTomato: any;\r\n  updateTomato: (payload: any) => void;\r\n}\r\n\r\ninterface ITomatoActionState {\r\n  description: string;\r\n}\r\n\r\nconst confirm = Modal.confirm\r\n\r\nclass TomatoAction extends Component <ITomatoActionProps, ITomatoActionState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.updateTomato({\r\n        description: this.state.description,\r\n        ended_at: new Date()\r\n      });\r\n      this.setState({description: ''});\r\n    }\r\n  };\r\n\r\n  onFinish = () => {\r\n    this.forceUpdate(); // 强制更新\r\n  };\r\n\r\n  showConfirm=()=> {\r\n    confirm({\r\n      title: '您目前正在一个番茄工作时间中,要放弃这个番茄吗?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: '坚持就是胜利哦~~',\r\n      okText:'我不行了',\r\n      cancelText:'继续坚持',\r\n      onOk:()=> {\r\n        this.abortTomato()\r\n      },\r\n      onCancel:()=> {\r\n        console.log('帮您取消番茄了哟');\r\n      },\r\n    });\r\n  }\r\n\r\n  abortTomato =  () => {\r\n    this.updateTomato({aborted: true});\r\n    document.title = \"Pomodoro番茄工作法\";\r\n  };\r\n\r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`, params);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    let html = <div/>;\r\n    if (this.props.unfinishedTomato === undefined) {\r\n      html = <Button className=\"startTomatoButton\" onClick={() => {this.props.startTomato();}}>开始番茄</Button>;\r\n    } else {\r\n      const startAt = Date.parse(this.props.unfinishedTomato.started_at);\r\n      const duration = this.props.unfinishedTomato.duration;\r\n      const timeNow = new Date().getTime();\r\n      if (timeNow - startAt > duration) {\r\n        html = <div className=\"inputWrapper\">\r\n          <Input className=\"inputTask\"\r\n                 value={this.state.description}\r\n                 placeholder=\"请输入你刚刚完成的任务\"\r\n                 onChange={e => this.setState({description: e.target.value})}\r\n                 onKeyUp={e => this.onKeyUp(e)}\r\n          />\r\n          <CloseCircleOutlined className=\"abort\"\r\n                               onClick={this.showConfirm}/>\r\n        </div>;\r\n      } else if (timeNow - startAt < duration) {\r\n        let timer = duration - timeNow + startAt;\r\n        html = (\r\n          <div className=\"countDownWrapper\">\r\n            <CountDown timer={timer} onFinish={this.onFinish} duration={duration}/>\r\n            <CloseCircleOutlined className=\"abort\"\r\n                                 onClick={this.showConfirm}/>\r\n          </div>\r\n        );// 倒计时\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"TomatoAction\" id=\"TomatoAction\">\r\n        {html}\r\n      </div>\r\n    );\r\n  };\r\n};\r\nexport default TomatoAction;","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport './TomotoList.scss';\r\n\r\ninterface ITomatoListProps {\r\n  finishedTomatoes: any\r\n}\r\n\r\nconst TomatoItem = function (props) {\r\n  return (\r\n    <div className=\"TomatoItem\">\r\n      <span className=\"timeRange\"> {dayjs(props.started_at).format('HH:mm')} - {dayjs(props.ended_at).format('HH:mm')} </span>\r\n      <span className=\"taskDescription\"> {props.description} </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TomatoList extends React.Component <ITomatoListProps> {\r\n  constructor(props) {super(props);}\r\n\r\n  get dates() {\r\n    const dates = Object.keys(this.props.finishedTomatoes);\r\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3);\r\n  }\r\n\r\n  public render() {\r\n    const list = this.dates.map(d => {\r\n      const tomatoes = this.props.finishedTomatoes[d];\r\n      return (\r\n        <div  key={d} className=\"dailyTomato\">\r\n          <div className=\"title\">\r\n            <span className=\"dateTime\"> {dayjs(d).format('M月DD日')} </span>\r\n            <span className=\"finishedCount\"> 完成了{tomatoes.length}个番茄 </span>\r\n          </div>\r\n          {\r\n            tomatoes.map(t => <TomatoItem key={t.id} {...t}/>)\r\n          }\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TomatoList\" id=\"TomatoList\">\r\n        {list}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoList;","import React, {Component} from 'react';\r\nimport './Tomatoes.scss';\r\nimport TomatoAction from './TomatoAction';\r\nimport {connect} from 'react-redux';\r\nimport {addTomato, updateTomato} from '../../redux/actions/tomatoes';\r\nimport TomatoList from './TomatoList';\r\nimport axios from '../../config/axios';\r\nimport _ from 'lodash';\r\n// import {format} from 'date-fns';\r\nimport dayjs from 'dayjs';\r\n\r\n\r\ninterface ITomatoesProps {\r\n  addTomato: (payload: any) => any\r\n  initTomatoes: (payload: any[]) => any\r\n  tomatoes: any[]\r\n  updateTomato: (payload: any) => any\r\n}\r\n\r\nclass Tomatoes extends Component <ITomatoesProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter(t => !t.description && !t.ended_at && !t.aborted)[0];\r\n  }\r\n\r\n  get finishTomatoes() {\r\n    const finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted);\r\n    // console.log(format(new Date(),'yyyy-MM-d'))\r\n    // console.log(finishedTomatoes);\r\n    // finishedTomatoes.map(t=>{\r\n    //   console.log(format(new Date(t.started_at),'yyyy-MM-d'))\r\n    // })\r\n    // const obj = _.groupBy(finishedTomatoes, (tomato) => {\r\n    //   return format(new Date(tomato.started_at), 'yyyy-MM-d');\r\n    // });\r\n    return _.groupBy(finishedTomatoes, (tomato) => {\r\n      return dayjs(tomato.started_at).format('YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n\r\n  startTomato = async () => {\r\n    try {\r\n      const response = await axios.post('tomatoes', {duration: 25 * 60 * 1000});\r\n      this.props.addTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Tomatoes\" id=\"Tomatoes\">\r\n        <TomatoAction startTomato={this.startTomato} unfinishedTomato={this.unfinishedTomato}\r\n                      updateTomato={this.props.updateTomato}/>\r\n        <TomatoList finishedTomatoes={this.finishTomatoes}/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato,\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);","import {INIT_TOMATOES,ADD_TOMATO,UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport const addTomato =(payload:any)=>{\r\n  return {\r\n    type:ADD_TOMATO,\r\n    payload\r\n  }\r\n}\r\nexport const initTomatoes = (payload:any[])=>{\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  }\r\n}\r\nexport const updateTomato = (payload:any)=>{\r\n  return {\r\n    type:UPDATE_TOMATO,\r\n    payload\r\n  }\r\n}","import  React from 'react';\r\nimport {Input} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {addTodo} from '../../redux/actions/todos';\r\nimport axios from '../../config/axios';\r\nimport {EnterOutlined} from '@ant-design/icons';\r\n\r\ninterface ITodoInputState {\r\n  description: string\r\n}\r\n\r\n\r\ninterface ITodoInputProps {\r\n  addTodo: (payload: any) => any\r\n}\r\n\r\nclass TodoInput extends React.Component<ITodoInputProps, ITodoInputState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.postTodo();\r\n    }\r\n  };\r\n\r\n  postTodo = async () => {\r\n    try {\r\n      const response = await axios.post('todos', {description: this.state.description});\r\n      this.props.addTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n    this.setState(({description: ''}));\r\n  };\r\n\r\n\r\n  public render() {\r\n    const {description} = this.state;\r\n    const suffix = description === '' ? <span/> : <EnterOutlined onClick={this.postTodo}/>;\r\n    return (\r\n      <div className=\"TodoInput\" id=\"TodoInput\">\r\n        <Input\r\n          placeholder=\"添加新任务\"\r\n          value={description}\r\n          suffix={suffix}\r\n          onChange={e => this.setState({'description': e.target.value})}\r\n          onKeyUp={this.onKeyUp}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Checkbox} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {editTodo, updateTodo} from '../../redux/actions/todos';\r\nimport classNames from 'classnames';\r\nimport './TodoItem.scss';\r\nimport {\r\n  EnterOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined\r\n} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\n\r\n\r\ninterface ITodoItemProps {\r\n  id: number;\r\n  description: string;\r\n  completed: boolean;\r\n  editing: boolean;\r\n  editTodo:(id:number)=>any;\r\n  updateTodo:(payload:any)=>any;\r\n  onEditRange: () => void\r\n}\r\n\r\ninterface ITodoItemState {\r\n  editText: string\r\n}\r\n\r\n// let timeId;\r\n\r\nclass TodoItem extends React.Component<ITodoItemProps, ITodoItemState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.description\r\n    };\r\n  }\r\n  private inputRef = React.createRef<HTMLInputElement>();\r\n\r\n  componentDidUpdate() {\r\n    this.inputRef.current && this.inputRef.current.focus();\r\n    // this.onEditRange();\r\n  }\r\n\r\n  // onEditRange = () => {\r\n  //   let element = this.inputRef.current;\r\n  //   if (element) {\r\n  //     element.focus();\r\n  //     // let start = element.selectionStart;\r\n  //     // let end = element.selectionEnd;\r\n  //     // start && end && element.setSelectionRange(start, end);\r\n  //     // element.setSelectionRange(0, -1);\r\n  //     // console.log(this.inputRef.current);\r\n  //   }\r\n  // };\r\n\r\n  updateTodo = async ( params: any) => {\r\n    if(params.completed){\r\n      params.completed_at = new Date()\r\n    }\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  editTodo = () => {\r\n    // if(timeId){clearTimeout(timeId)};\r\n    this.props.editTodo(this.props.id);\r\n  };\r\n\r\n  onKeyUp = (e) => {\r\n    if (e.keyCode === 13 && this.state.editText !== '') {\r\n      this.updateTodo({description: this.state.editText});\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    const Editing = (\r\n      <div className=\"editing\">\r\n        <input type=\"text\" value={this.state.editText}\r\n               onChange={e => this.setState({editText: e.target.value})}\r\n               onKeyUp={this.onKeyUp}\r\n               ref={this.inputRef}\r\n        />\r\n        <div className=\"iconWrapper\">\r\n          <EnterOutlined onClick={() => this.updateTodo({description: this.state.editText})}/>\r\n          <DeleteOutlined onClick={e => this.updateTodo({deleted: true})}/>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const Text = <span className=\"text\" onClick={() => this.updateTodo({completed: !this.props.completed})}>\r\n      {this.props.description}\r\n      <EditOutlined onClick={e => {\r\n        e.stopPropagation();\r\n        this.editTodo();\r\n      }}/>\r\n    </span>;\r\n    // const Text2 = <span onDoubleClick={this.toEditing}>\r\n    //                     onClick={()=>{\r\n    //                         if(timeId){clearTimeout(timeId)}\r\n    //                           timeId = setTimeout(() => {\r\n    //                             this.update({completed: !this.props.completed});\r\n    //                           }, 200);\r\n    //                     }}\r\n    //               {this.props.description}\r\n    //               </span> ;\r\n\r\n    // yarn add classnames\r\n    const todoItemClass = classNames({\r\n      TodoItem: true,\r\n      editing: this.props.editing,\r\n      completed: this.props.completed\r\n    });\r\n\r\n    return (\r\n      <div className={todoItemClass} id=\"TodoItem\">\r\n        <Checkbox checked={this.props.completed}\r\n                  onChange={e => this.updateTodo({completed: e.target.checked})}\r\n        />\r\n\r\n        {this.props.editing ? Editing : Text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  editTodo,\r\n  updateTodo,\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);","import  React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {updateTodo} from '../../redux/actions/todos';\r\nimport TodoInput from './TodoInput';\r\nimport TodoItem from './TodoItem';\r\nimport './Todos.scss';\r\n\r\nclass Todos extends React.Component<any> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  get unDeletedTodos() {\r\n    return this.props.todos.filter(t => !t.deleted);\r\n  }\r\n\r\n  get unCompletedTodos() {\r\n    return this.unDeletedTodos.filter(t => !t.completed);\r\n  }\r\n\r\n  get completedTodos() {\r\n    return this.unDeletedTodos.filter(t => t.completed);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"Todos\" id=\"Todos\">\r\n        <TodoInput/>\r\n        <div className=\"todoList\">\r\n          {\r\n            this.unCompletedTodos.map(\r\n              t => <TodoItem key={t.id} {...t}\r\n              />)\r\n          }\r\n          {/*{*/}\r\n          {/*  this.completedTodos.map(*/}\r\n          {/*    t => <TodoItem key={t.id} {...t}*/}\r\n          {/*    />)*/}\r\n          {/*}*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\ninterface IPolygonProps {\r\n  data: any\r\n  totalFinishedCount: number\r\n}\r\n\r\nclass Polygon extends React.Component<IPolygonProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  point = () => {\r\n    const dates = Object.keys(this.props.data).sort((a, b) => {\r\n      return Date.parse(a) - Date.parse(b);\r\n    });\r\n    const firstDay = dates[0];\r\n    if (firstDay) {\r\n\r\n      const range = new Date().getTime() - Date.parse(firstDay);\r\n      let finishedCount = 0;\r\n      let finalY;\r\n      const pointArray = dates.map(date => {\r\n        const x = (Date.parse(date) - Date.parse(firstDay)) / range * 240;\r\n        finishedCount += this.props.data[date].length;\r\n        const y = (1 - (finishedCount / this.props.totalFinishedCount)) * 60;\r\n        finalY = y;\r\n        return `${x},${y}`;\r\n      });\r\n      return ['0,60', ...pointArray, `240,${finalY}`,'240,60'].join(' ');\r\n    } else {\r\n      return '0,60 240,60';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Polygon\">\r\n        <svg>\r\n          <polygon fill=\"rgba(215,78,78,0.1)\" stroke=\"rgba(215,78,78,0.5)\" strokeWidth=\"1\" points={this.point()}/>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Polygon;\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport {updateTodo} from '../../../redux/actions/todos';\r\nimport axios from '../../../config/axios';\r\nimport './TodoHistoryTodoItem.scss';\r\n\r\ninterface ITodoHistoryTodoItemProps {\r\n  todo: any\r\n  itemType: string\r\n  updateTodo:(payload:any)=>void\r\n}\r\n\r\nclass TodoHistoryTodoItem extends React.Component<ITodoHistoryTodoItemProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  updateTodo= async (params:any)=>{\r\n    try{\r\n      const response = await axios.put(`todos/${this.props.todo.id}`,params)\r\n      this.props.updateTodo(response.data.resource)\r\n    }catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let action;\r\n    let formatText;\r\n    let time;\r\n    if (this.props.itemType === 'finished') {\r\n      formatText = 'HH:mm';\r\n      time = this.props.todo.updated_at;\r\n      action = (\r\n        <div>\r\n          <span onClick={()=>this.updateTodo({finished:false})}> 恢复 </span>\r\n          <span onClick={()=>this.updateTodo({deleted:true})}> 删除 </span>\r\n        </div>\r\n      );\r\n    } else if (this.props.itemType === 'deleted') {\r\n      formatText = 'YYYY-MM-DD';\r\n      time = this.props.todo.created_at;\r\n      action = (\r\n        <div>\r\n          <span onClick={()=>this.updateTodo({deleted:false})}> 恢复 </span>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"TodoHistoryTodoItem\" id=\"TodoHistoryTodoItem\">\r\n        <div className=\"text\">\r\n          <span className=\"time\">{dayjs(this.props.todo.updated_at).format(`${formatText}`)}</span>\r\n          <span className=\"description\">{this.props.todo.description}</span>\r\n        </div>\r\n        <div className=\"action\">\r\n          {action}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryTodoItem);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport dayjs from 'dayjs';\r\nimport _ from 'lodash';\r\nimport {Tabs} from 'antd';\r\nimport TodoHistoryTodoItem from './TodoHistoryTodoItem';\r\nimport './TodoHistory.scss';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ninterface ITodoHistoryProps {\r\n  todos: any[]\r\n}\r\n\r\n\r\n\r\nclass TodoHistory extends React.Component<ITodoHistoryProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted);\r\n  }\r\n\r\n  get deletedTodos() {\r\n    return this.props.todos.filter(t => t.deleted);\r\n  }\r\n\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => {\r\n      return dayjs(todo.updated_at).format('YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTodos).sort((a, b) => Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n  render() {\r\n    const finishedTodoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTodos\">\r\n          <div className=\"summary\">\r\n            <p className=\"date\">\r\n              <span>{dayjs(date).format('MM月D日')}</span>\r\n              <span>周五</span>\r\n            </p>\r\n            <p className=\"finishedCount\">\r\n              完成了{this.dailyFinishedTodos[date].length}个任务\r\n            </p>\r\n          </div>\r\n          <div className=\"todoList\">\r\n            {\r\n              this.dailyFinishedTodos[date].map(todo => <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"finished\"/>)\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    const deletedTodoList = this.deletedTodos.map(todo => {\r\n      return (\r\n          <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"deleted\"/>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成任务\" key=\"1\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {finishedTodoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"已删除任务\" key=\"2\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {deletedTodoList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nexport default connect(mapStateToProps)(TodoHistory);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './Statistics.scss';\r\nimport dayjs from 'dayjs';\r\nimport _ from 'lodash';\r\nimport Polygon from './Polygon';\r\nimport TodoHistory from './TodoHIstory/TodoHistory';\r\n\r\ninterface IStatisticsProps {\r\n  todos: any[]\r\n}\r\n\r\nclass Statistics extends React.Component<IStatisticsProps> {\r\n  constructor(props) {super(props);}\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted);\r\n  }\r\n\r\n  get dailyTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => {\r\n      return dayjs(todo.updated_at).format('YYYY-MM-D');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Statistics\" id=\"Statistics\">\r\n        <ul>\r\n          <li>统计</li>\r\n          <li>目标</li>\r\n          <li>番茄历史</li>\r\n          <li>\r\n            任务历史\r\n            累计完成 {this.finishedTodos.length} 个任务\r\n            <Polygon data={this.dailyTodos} totalFinishedCount={this.finishedTodos.length}/>\r\n          </li>\r\n        </ul>\r\n        <TodoHistory/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n\r\n","import React from 'react';\r\nimport {Dropdown, Menu} from 'antd';\r\nimport {UserOutlined, DownOutlined} from '@ant-design/icons';\r\nimport history from '../../config/history';\r\nimport axios from '../../config/axios';\r\nimport {connect} from 'react-redux';\r\nimport {initTodos} from '../../redux/actions/todos';\r\nimport {initTomatoes} from '../../redux/actions/tomatoes';\r\nimport Tomatoes from '../Tomatoes/Tomatoes';\r\nimport Todos from '../Todos/Todos';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport './Home.scss';\r\n\r\nconst logout = () => {\r\n  localStorage.setItem('x-token', '');\r\n  history.push('login');\r\n};\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"1\"><UserOutlined/>个人设置</Menu.Item>\r\n    <Menu.Item key=\"2\" onClick={logout}><UserOutlined/>注销</Menu.Item>\r\n  </Menu>\r\n);\r\n\r\ninterface IIndexState {\r\n  user: any\r\n}\r\n\r\nclass Home extends React.Component<any, IIndexState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    };\r\n  }\r\n\r\n  async UNSAFE_componentWillMount() {\r\n    await this.getMe();\r\n    await this.getTodos();\r\n    await this.getTomatoes();\r\n  }\r\n\r\n  getTodos = async () => {\r\n    try {\r\n      const response = await axios.get('todos');\r\n      const todos = response.data.resources.map(t => Object.assign({}, t, {editing: false}));\r\n      this.props.initTodos(todos);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  getTomatoes = async () => {\r\n    try {\r\n      const response = await axios.get('tomatoes');\r\n      // 放入 redux 中\r\n      this.props.initTomatoes(response.data.resources);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n  getMe = async () => {\r\n    const response = await axios.get('me');\r\n    this.setState({user: response.data});\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\" id=\"Home\">\r\n        <header>\r\n          <span className=\"logo\">LOGO</span>\r\n          <Dropdown className=\"user\" overlay={menu}>\r\n            <span>\r\n              {this.state.user && this.state.user.account} <DownOutlined style={{marginLeft: 2}}/>\r\n            </span>\r\n          </Dropdown>\r\n        </header>\r\n        <main>\r\n          <Tomatoes/>\r\n          <Todos/>\r\n        </main>\r\n        <Statistics/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDisPatchToProps = {\r\n  initTodos,\r\n  initTomatoes\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDisPatchToProps)(Home);","import  React from 'react';\nimport {Router, Route} from 'react-router-dom';\nimport history from './config/history';\nimport Login from './components/Login/Login';\nimport SignUp from './components/SignUp/SignUp';\nimport Home from './components/Home/Home';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <div>\n          <Route exact={true} path=\"/\" component={Home}/>\n          <Route  path=\"/signup\" component={SignUp}/>\n          <Route  path=\"/login\" component={Login}/>\n        </div>\n\n      </Router>\n    );\n  }\n\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}